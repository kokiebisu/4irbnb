{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/animation/animation.component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n/** components */\n\nimport { LoadingAnimation } from \"./animation.loading\";\n\n/**\n * Bundles the animation components\n * @param {string} type - Specifies the type of animation component\n */\nexport const Animation = (_ref) => {\n  let {\n    type = \"loading\",\n    extendsTo\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"type\", \"extendsTo\"]);\n\n  const types = {\n    loading: /*#__PURE__*/_jsxDEV(LoadingAnimation, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"animation\",\n    className: extendsTo,\n    children: types[type]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/animation/animation.component.tsx"],"names":["React","LoadingAnimation","Animation","type","extendsTo","props","types","loading"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAQA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAmC,GAAG,UAI7C;AAAA,MAJ8C;AAClDC,IAAAA,IAAI,GAAG,SAD2C;AAElDC,IAAAA;AAFkD,GAI9C;AAAA,MADDC,KACC;;AACJ,QAAMC,KAAK,GAAG;AACZC,IAAAA,OAAO,eAAE,QAAC,gBAAD,oBAAsBF,KAAtB;AAAA;AAAA;AAAA;AAAA;AADG,GAAd;AAGA,sBACE;AAAK,mBAAY,WAAjB;AAA6B,IAAA,SAAS,EAAED,SAAxC;AAAA,cACGE,KAAK,CAACH,IAAD;AADR;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbM","sourcesContent":["import React from \"react\";\n\n/** components */\nimport { LoadingAnimation } from \"./animation.loading\";\n\nexport interface AnimationProps {\n  type?: string;\n  extends?: any;\n  [x: string]: any;\n}\n\n/**\n * Bundles the animation components\n * @param {string} type - Specifies the type of animation component\n */\nexport const Animation: React.FC<AnimationProps> = ({\n  type = \"loading\",\n  extendsTo,\n  ...props\n}) => {\n  const types = {\n    loading: <LoadingAnimation {...props} />,\n  };\n  return (\n    <div data-testid=\"animation\" className={extendsTo}>\n      {types[type]}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}