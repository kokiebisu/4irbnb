{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** landing */\nimport { CategoryTemplate } from \"./template.category\";\nimport { NearbyTemplate } from \"./template.nearby\";\nimport { BannerTemplate } from \"./template.banner\";\nimport { OnlineTemplate } from \"./template.online\";\nimport { AnywhereTemplate } from \"./template.anywhere\";\n\n/**\n * Bundles the button components\n * @param {string} extendsTo - Add custom styling to the specified component\n * @param {string} type - Specifies the type of button component\n * @param {Object} children - A JSX that will be part of the component\n */\nexport const Template = (_ref) => {\n  let {\n    extendsTo = \"\",\n    variant = \"auth\",\n    children,\n    onClick,\n    to,\n    block,\n    animate\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"extendsTo\", \"variant\", \"children\", \"onClick\", \"to\", \"block\", \"animate\"]);\n\n  const variants = {\n    category: /*#__PURE__*/_jsx(CategoryTemplate, _objectSpread({}, props)),\n    nearby: /*#__PURE__*/_jsx(NearbyTemplate, _objectSpread({}, props)),\n    banner: /*#__PURE__*/_jsx(BannerTemplate, _objectSpread({}, props)),\n    online: /*#__PURE__*/_jsx(OnlineTemplate, _objectSpread({}, props)),\n    anywhere: /*#__PURE__*/_jsx(AnywhereTemplate, _objectSpread({}, props))\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"data-testid\": `${variant}-landing--template`,\n    children: variants[variant]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}