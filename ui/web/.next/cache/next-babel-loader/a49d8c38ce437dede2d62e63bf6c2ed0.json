{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/organisms/header/header.component.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** components */\nimport { DetailsHeader } from \"@header/header.details\";\nimport { ExperiencesHeader } from \"@header/header.experiences\";\nimport { HomesHeader } from \"@header/header.homes\";\nimport { OnlineHostHeader } from \"@header/header.onlinehost\";\nimport { StayHeader } from \"@header/header.stay\";\nimport { TransparentHeader } from \"@header/header.landing\";\nimport { WhiteHeader } from \"@header/header.white\";\n\n/**\n * Bundles the header components\n * @param {string} extendsTo - Add custom styling to the specified component\n * @param {string} variant - Specifies the type of header component\n */\nexport var Header = function Header(_ref) {\n  var variant = _ref.variant,\n      extendsTo = _ref.extendsTo,\n      props = _objectWithoutProperties(_ref, [\"variant\", \"extendsTo\"]);\n\n  var variants = {\n    landing: /*#__PURE__*/_jsxDEV(TransparentHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, _this),\n    white: /*#__PURE__*/_jsxDEV(WhiteHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, _this),\n    details: /*#__PURE__*/_jsxDEV(DetailsHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, _this),\n    homes: /*#__PURE__*/_jsxDEV(HomesHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, _this),\n    experiences: /*#__PURE__*/_jsxDEV(ExperiencesHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, _this),\n    onlinehost: /*#__PURE__*/_jsxDEV(OnlineHostHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, _this),\n    stay: /*#__PURE__*/_jsxDEV(StayHeader, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, _this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: extendsTo,\n    \"data-testid\": \"\".concat(variant, \"-header\"),\n    children: variants[variant]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, _this);\n};\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/organisms/header/header.component.tsx"],"names":["DetailsHeader","ExperiencesHeader","HomesHeader","OnlineHostHeader","StayHeader","TransparentHeader","WhiteHeader","Header","variant","extendsTo","props","variants","landing","white","details","homes","experiences","onlinehost","stay"],"mappings":";;;;;;;;;;;AAAA;AACA,SAASA,aAAT,QAA8B,wBAA9B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAQA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAIvC;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,QAEL,GAAG;AACFC,IAAAA,OAAO,eAAE,QAAC,iBAAD,oBAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA,aADP;AAEFG,IAAAA,KAAK,eAAE,QAAC,WAAD,oBAAiBH,KAAjB;AAAA;AAAA;AAAA;AAAA,aAFL;AAGFI,IAAAA,OAAO,eAAE,QAAC,aAAD,oBAAmBJ,KAAnB;AAAA;AAAA;AAAA;AAAA,aAHP;AAIFK,IAAAA,KAAK,eAAE,QAAC,WAAD,oBAAiBL,KAAjB;AAAA;AAAA;AAAA;AAAA,aAJL;AAKFM,IAAAA,WAAW,eAAE,QAAC,iBAAD,oBAAuBN,KAAvB;AAAA;AAAA;AAAA;AAAA,aALX;AAMFO,IAAAA,UAAU,eAAE,QAAC,gBAAD,oBAAsBP,KAAtB;AAAA;AAAA;AAAA;AAAA,aANV;AAOFQ,IAAAA,IAAI,eAAE,QAAC,UAAD,oBAAgBR,KAAhB;AAAA;AAAA;AAAA;AAAA;AAPJ,GAFJ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAED,SAAhB;AAA2B,6BAAgBD,OAAhB,YAA3B;AAAA,cACGG,QAAQ,CAACH,OAAD;AADX;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CArBM;KAAMD,M","sourcesContent":["/** components */\nimport { DetailsHeader } from \"@header/header.details\";\nimport { ExperiencesHeader } from \"@header/header.experiences\";\nimport { HomesHeader } from \"@header/header.homes\";\nimport { OnlineHostHeader } from \"@header/header.onlinehost\";\nimport { StayHeader } from \"@header/header.stay\";\nimport { TransparentHeader } from \"@header/header.landing\";\nimport { WhiteHeader } from \"@header/header.white\";\n\nexport interface HeaderProps {\n  extendsTo?: string;\n  variant: string;\n  [property: string]: any;\n}\n\n/**\n * Bundles the header components\n * @param {string} extendsTo - Add custom styling to the specified component\n * @param {string} variant - Specifies the type of header component\n */\nexport const Header: React.FC<HeaderProps> = ({\n  variant,\n  extendsTo,\n  ...props\n}) => {\n  const variants: {\n    [variant: string]: JSX.Element;\n  } = {\n    landing: <TransparentHeader {...props} />,\n    white: <WhiteHeader {...props} />,\n    details: <DetailsHeader {...props} />,\n    homes: <HomesHeader {...props} />,\n    experiences: <ExperiencesHeader {...props} />,\n    onlinehost: <OnlineHostHeader {...props} />,\n    stay: <StayHeader {...props} />,\n  };\n  return (\n    <div className={extendsTo} data-testid={`${variant}-header`}>\n      {variants[variant]}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}