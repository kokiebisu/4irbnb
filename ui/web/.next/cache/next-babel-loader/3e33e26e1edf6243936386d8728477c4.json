{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\n/** styles **/\nimport font from \"@styles/font.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport color from \"@styles/color.module.scss\";\n/**\n * Renders the border button props\n * @param {string} to - The link to which it redirects\n * @param {string} title - The title of the button\n * @param {boolean} inverse - Whether if the button takes an inverse styling\n * @param {string} size - The size of the button\n * @param {boolean} spread - Whether if the button takes full width of the parent\n */\n\nexport const BorderButton = ({\n  title = \"Button\",\n  inverse = false,\n  size = \"md\",\n  bold = true\n}) => {\n  const renderBorder = () => {\n    if (inverse && bold) {\n      return [color[\"b-2--white\"]].join(\" \");\n    }\n\n    if (inverse) {\n      return [color[\"b--white\"]].join(\" \");\n    }\n\n    if (bold) {\n      return [color[\"b-2--black\"]].join(\" \");\n    }\n\n    return [color[\"b--black\"]].join(\" \");\n  };\n\n  const styles = {\n    common: [font[\"text--center\"], shape[\"br--6\"], font[\"no-wrap\"]].join(\" \"),\n    sm: [font[\"size--14\"], space[\"p-t--6\"], space[\"p-b--6\"], space[\"p-l--14\"], space[\"p-r--14\"]].join(\" \"),\n    md: [font[\"size--16\"], space[\"p-t--10\"], space[\"p-b--10\"], space[\"p-l--18\"], space[\"p-r--18\"]].join(\" \"),\n    lg: [font[\"size--18\"], space[\"p-t--12\"], space[\"p-b--12\"], space[\"p-l--22\"], space[\"p-r--22\"]].join(\" \")\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: `${styles[\"common\"]} ${styles[size]} ${renderBorder()}`,\n    children: /*#__PURE__*/_jsx(\"h4\", {\n      className: inverse ? color[\"c--white\"] : undefined,\n      children: title\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}