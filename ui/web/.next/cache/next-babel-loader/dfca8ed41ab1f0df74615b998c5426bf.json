{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** layouts */\nimport { InputLayout } from \"@layout/layout.input\";\nimport { CreateLayout } from \"@layout/layout.create\";\nimport { HomesLayout } from \"@layout/section/layout.homes\";\nimport { LandingLayout } from \"@layout/section/layout.landing\";\nimport { OnlineHostLayout } from \"@layout/section/layout.onlinehost\";\nimport { CurrencyLayout } from \"@layout/layout.currency\";\nimport { LocationLayout } from \"@layout/modal/layout.location\";\n\n/**\n * Bundles the Layout components\n * @param {string} extendsTo - Customize the component wrapper\n * @param {string} variant - Specify the variant of the component\n */\nexport const Layout = (_ref) => {\n  let {\n    extendsTo,\n    variant = \"input\"\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"extendsTo\", \"variant\"]);\n\n  const variants = {\n    input: /*#__PURE__*/_jsx(InputLayout, _objectSpread({}, props)),\n    create: /*#__PURE__*/_jsx(CreateLayout, _objectSpread({}, props)),\n    homes: /*#__PURE__*/_jsx(HomesLayout, _objectSpread({}, props)),\n    landing: /*#__PURE__*/_jsx(LandingLayout, _objectSpread({}, props)),\n    onlinehost: /*#__PURE__*/_jsx(OnlineHostLayout, _objectSpread({}, props)),\n    currency: /*#__PURE__*/_jsx(CurrencyLayout, _objectSpread({}, props)),\n    location: /*#__PURE__*/_jsx(LocationLayout, _objectSpread({}, props))\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: extendsTo,\n    \"data-testid\": `${variant}-layout`,\n    children: variants[variant]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}