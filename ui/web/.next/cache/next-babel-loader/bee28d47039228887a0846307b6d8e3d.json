{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.closed.tsx\";\n\n/** vectors */\nimport { CheckPlain, Close } from \"@svg/original\";\nexport const ClosedButton = ({\n  content = \"close\",\n  selected = false\n}) => {\n  const contents = {\n    close: /*#__PURE__*/_jsxDEV(Close, {\n      width: 16,\n      fill: selected,\n      stroke: selected ? \"white\" : \"black\",\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this),\n    check: /*#__PURE__*/_jsxDEV(CheckPlain, {\n      width: 16,\n      fill: selected,\n      stroke: selected ? \"white\" : \"black\",\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 5,\n      borderRadius: 9999,\n      backgroundColor: selected ? \"black\" : \"white\",\n      border: `1px solid ${selected ? \"black\" : \"lightgray\"}`\n    },\n    children: contents[content]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.closed.tsx"],"names":["CheckPlain","Close","ClosedButton","content","selected","contents","close","check","display","justifyContent","alignItems","padding","borderRadius","backgroundColor","border"],"mappings":";;;AAAA;AACA,SAASA,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,OAAO,MAAMC,YAGX,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG,OAAZ;AAAqBC,EAAAA,QAAQ,GAAG;AAAhC,CAAD,KAA6C;AAChD,QAAMC,QAAQ,GAAG;AACfC,IAAAA,KAAK,eACH,QAAC,KAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,IAAI,EAAEF,QAFR;AAGE,MAAA,MAAM,EAAEA,QAAQ,GAAG,OAAH,GAAa,OAH/B;AAIE,MAAA,WAAW,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,YAFa;AASfG,IAAAA,KAAK,eACH,QAAC,UAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,IAAI,EAAEH,QAFR;AAGE,MAAA,MAAM,EAAEA,QAAQ,GAAG,OAAH,GAAa,OAH/B;AAIE,MAAA,WAAW,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA;AAVa,GAAjB;AAkBA,sBACE;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,OAAO,EAAE,CAJJ;AAKLC,MAAAA,YAAY,EAAE,IALT;AAMLC,MAAAA,eAAe,EAAET,QAAQ,GAAG,OAAH,GAAa,OANjC;AAOLU,MAAAA,MAAM,EAAG,aAAYV,QAAQ,GAAG,OAAH,GAAa,WAAY;AAPjD,KADT;AAAA,cAWGC,QAAQ,CAACF,OAAD;AAXX;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArCM","sourcesContent":["/** vectors */\nimport { CheckPlain, Close } from \"@svg/original\";\n\nexport const ClosedButton: React.FC<{\n  selected?: boolean;\n  content?: string;\n}> = ({ content = \"close\", selected = false }) => {\n  const contents = {\n    close: (\n      <Close\n        width={16}\n        fill={selected}\n        stroke={selected ? \"white\" : \"black\"}\n        strokeWidth={2}\n      />\n    ),\n    check: (\n      <CheckPlain\n        width={16}\n        fill={selected}\n        stroke={selected ? \"white\" : \"black\"}\n        strokeWidth={2}\n      />\n    ),\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 5,\n        borderRadius: 9999,\n        backgroundColor: selected ? \"black\" : \"white\",\n        border: `1px solid ${selected ? \"black\" : \"lightgray\"}`,\n      }}\n    >\n      {contents[content]}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}