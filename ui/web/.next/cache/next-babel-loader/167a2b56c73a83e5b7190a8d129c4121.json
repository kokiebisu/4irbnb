{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.password.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n/** Styling */\n\nimport { styleInput, styleLabel, styleContainer } from \"./styling.text\";\n/** components */\n\nimport { Button } from \"@button\";\n/** Helper */\n\nimport { checkPassword } from \"@helper/auth\";\n/** stories */\n\nimport { Underline } from \"@button/button.stories\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport const PasswordInput = ({\n  handleChange,\n  value,\n  direction,\n  errors = false\n}) => {\n  const {\n    0: fieldActive,\n    1: setFieldActive\n  } = useState(false);\n  const {\n    0: hide,\n    1: setHide\n  } = useState(true);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [color[\"b-b--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"bbr--10\"]].join(\" \");\n\n      case \"bottom\":\n        return [color[\"b-t--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"btr--10\"]].join(\" \");\n\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 60\n    },\n    className: `${[input[\"outside\"], layout[\"relative\"], space[\"p-v--6\"], space[\"p-h--12\"], layout[\"flex\"], layout[\"items-center\"]].join(\" \")} ${renderShape()} ${styleContainer(errors, fieldActive, checkPassword(value))}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        id: \"password\",\n        name: \"password\",\n        type: hide ? \"password\" : \"text\",\n        onChange: handleChange,\n        value: value,\n        onFocus: activateField,\n        onBlur: deactivateField,\n        className: `${[space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], color[\"c__placeholder--black\"], input[\"input\"]].join(\" \")} ${styleInput(errors, fieldActive, checkPassword(value))}`,\n        placeholder: fieldActive ? \"Password\" : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: `${[layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \")} ${styleLabel(errors, fieldActive, checkPassword(value), value)}`,\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [layout[\"flex\"], layout[\"items-center\"], layout[\"justify-center\"], space[\"m-l--18\"]].join(\" \"),\n      children: /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({}, Underline.args), {}, {\n        onClick: () => setHide(prevHide => !prevHide),\n        font: 13,\n        title: hide ? \"Show\" : \"Hide\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.password.tsx"],"names":["useState","shape","color","space","layout","font","input","styleInput","styleLabel","styleContainer","Button","checkPassword","Underline","PasswordInput","handleChange","value","direction","errors","fieldActive","setFieldActive","hide","setHide","activateField","deactivateField","renderShape","join","height","position","width","undefined","args","prevHide"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n/** styles **/\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n\n/** Styling */\nimport { styleInput, styleLabel, styleContainer } from \"./styling.text\";\n\n/** components */\nimport { Button } from \"@button\";\n\n/** Helper */\nimport { checkPassword } from \"@helper/auth\";\n\n/** stories */\nimport { Underline } from \"@button/button.stories\";\n\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\nexport const PasswordInput: React.FC<{\n  handleChange?: any;\n  value?: string;\n  direction?: string;\n  errors?: boolean;\n}> = ({ handleChange, value, direction, errors = false }) => {\n  const [fieldActive, setFieldActive] = useState(false);\n  const [hide, setHide] = useState(true);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [\n          color[\"b-b--white__3\"],\n          color[\"b-l--white__3\"],\n          color[\"b-r--white__3\"],\n          shape[\"bbr--10\"],\n        ].join(\" \");\n      case \"bottom\":\n        return [\n          color[\"b-t--white__3\"],\n          color[\"b-l--white__3\"],\n          color[\"b-r--white__3\"],\n          shape[\"btr--10\"],\n        ].join(\" \");\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return (\n    <div\n      style={{ height: 60 }}\n      className={`${[\n        input[\"outside\"],\n        layout[\"relative\"],\n        space[\"p-v--6\"],\n        space[\"p-h--12\"],\n        layout[\"flex\"],\n        layout[\"items-center\"],\n      ].join(\" \")} ${renderShape()} ${styleContainer(\n        errors,\n        fieldActive,\n        checkPassword(value)\n      )}`}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <input\n          autoFocus={true}\n          id=\"password\"\n          name=\"password\"\n          type={hide ? \"password\" : \"text\"}\n          onChange={handleChange}\n          value={value}\n          onFocus={activateField}\n          onBlur={deactivateField}\n          className={`${[\n            space[\"p--0\"],\n            shape[\"w--full\"],\n            layout[\"block\"],\n            color[\"b--0\"],\n            font[\"size--16\"],\n            font[\"weight--300\"],\n            color[\"c__placeholder--black\"],\n            input[\"input\"],\n          ].join(\" \")} ${styleInput(\n            errors,\n            fieldActive,\n            checkPassword(value)\n          )}`}\n          placeholder={fieldActive ? \"Password\" : undefined}\n        />\n        <label\n          htmlFor=\"password\"\n          className={`${[\n            layout[\"absolute\"],\n            font[\"size--12\"],\n            color[\"c--gray__1\"],\n            font[\"weight--100\"],\n            input[\"label\"],\n          ].join(\" \")} ${styleLabel(\n            errors,\n            fieldActive,\n            checkPassword(value),\n            value\n          )}`}\n        >\n          Password\n        </label>\n      </div>\n      <div\n        className={[\n          layout[\"flex\"],\n          layout[\"items-center\"],\n          layout[\"justify-center\"],\n          space[\"m-l--18\"],\n        ].join(\" \")}\n      >\n        <Button\n          {...Underline.args}\n          onClick={() => setHide((prevHide) => !prevHide)}\n          font={13}\n          title={hide ? \"Show\" : \"Hide\"}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}