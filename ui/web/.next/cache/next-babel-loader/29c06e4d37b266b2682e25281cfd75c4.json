{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** components */\nimport { PaginateBar } from \"@bar/bar.paginate\";\nimport { ProgressBar } from \"@bar/bar.progress\";\nimport { SearchBar } from \"@bar/bar.search\";\nimport { CovidBar } from \"@bar/bar.covid\";\nimport { CreateBar } from \"@bar/bar.create\";\nimport { MenuBar } from \"@bar/bar.menu\";\nimport { AvailabilityBar } from \"@bar/bar.availability\";\n\n/**\n * Bundles the bar components\n * @param {string} type - Specifies the type of bar component\n */\nexport var Bar = function Bar(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"paginate\" : _ref$variant,\n      props = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  var variants = {\n    availability: /*#__PURE__*/_jsx(AvailabilityBar, _objectSpread({}, props)),\n    paginate: /*#__PURE__*/_jsx(PaginateBar, _objectSpread({}, props)),\n    covid: /*#__PURE__*/_jsx(CovidBar, _objectSpread({}, props)),\n    progress: /*#__PURE__*/_jsx(ProgressBar, _objectSpread({}, props)),\n    search: /*#__PURE__*/_jsx(SearchBar, _objectSpread({}, props)),\n    create: /*#__PURE__*/_jsx(CreateBar, _objectSpread({}, props)),\n    menu: /*#__PURE__*/_jsx(MenuBar, _objectSpread({}, props))\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"data-testid\": \"\".concat(variant, \"-bar\"),\n    children: variants[variant]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}