{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.menu.tsx\",\n    _this = this;\n\n/** styles */\nimport layout from \"@styles/layout.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\n\n/** vectors */\nimport { Avatar, Bars } from \"@svg/original\";\n/**\n * Renders the menu button components\n * @param {boolean} inverse - Whether if the button takes the inverse styling or not\n */\n\nexport var MenuButton = function MenuButton(_ref) {\n  var _ref$authenticated = _ref.authenticated,\n      authenticated = _ref$authenticated === void 0 ? false : _ref$authenticated,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {\n    imgUrl: \"https://images.unsplash.com/photo-1562124638-724e13052daf?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8OTV8fGZhY2V8ZW58MHwyfDB8&auto=format&fit=crop&w=500&q=60\"\n  } : _ref$data,\n      _ref$inverse = _ref.inverse,\n      inverse = _ref$inverse === void 0 ? false : _ref$inverse;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\".concat(inverse ? [color[\"b-2--transparent\"]].join(\" \") : [color[\"b-2--white__2\"]].join(\" \"), \" \").concat([layout[\"flex\"], layout[\"items-center\"], space[\"p-v--4\"], space[\"p-l--10\"], space[\"p-r--6\"], color[\"bg--white\"], shape[\"br--30\"]].join(\" \")),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: [space[\"m-r--10\"]].join(\" \"),\n      children: /*#__PURE__*/_jsxDEV(Bars, {\n        fill: \"black\",\n        width: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: authenticated && data ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: [shape[\"br--circle\"], shape[\"w--30\"], layout[\"vertical--bottom\"]].join(\" \"),\n        style: {\n          width: 30,\n          verticalAlign: \"bottom\"\n        },\n        src: data.imgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(Avatar, {\n        width: 30,\n        fill: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n_c = MenuButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuButton\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.menu.tsx"],"names":["layout","space","shape","color","Avatar","Bars","MenuButton","authenticated","data","imgUrl","inverse","join","width","verticalAlign"],"mappings":";;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAGA;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,eAA7B;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,UAMX,GAAG,SANQA,UAMR,OAOC;AAAA,gCANJC,aAMI;AAAA,MANJA,aAMI,mCANY,KAMZ;AAAA,uBALJC,IAKI;AAAA,MALJA,IAKI,0BALG;AACLC,IAAAA,MAAM,EACJ;AAFG,GAKH;AAAA,0BADJC,OACI;AAAA,MADJA,OACI,6BADM,KACN;AACJ,sBACE;AACE,IAAA,SAAS,YACPA,OAAO,GACH,CAACP,KAAK,CAAC,kBAAD,CAAN,EAA4BQ,IAA5B,CAAiC,GAAjC,CADG,GAEH,CAACR,KAAK,CAAC,eAAD,CAAN,EAAyBQ,IAAzB,CAA8B,GAA9B,CAHG,cAIL,CACFX,MAAM,CAAC,MAAD,CADJ,EAEFA,MAAM,CAAC,cAAD,CAFJ,EAGFC,KAAK,CAAC,QAAD,CAHH,EAIFA,KAAK,CAAC,SAAD,CAJH,EAKFA,KAAK,CAAC,QAAD,CALH,EAMFE,KAAK,CAAC,WAAD,CANH,EAOFD,KAAK,CAAC,QAAD,CAPH,EAQFS,IARE,CAQG,GARH,CAJK,CADX;AAAA,4BAeE;AAAK,MAAA,SAAS,EAAE,CAACV,KAAK,CAAC,SAAD,CAAN,EAAmBU,IAAnB,CAAwB,GAAxB,CAAhB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAfF,eAkBE;AAAA,gBACGJ,aAAa,IAAIC,IAAjB,gBACC;AACE,QAAA,SAAS,EAAE,CACTN,KAAK,CAAC,YAAD,CADI,EAETA,KAAK,CAAC,OAAD,CAFI,EAGTF,MAAM,CAAC,kBAAD,CAHG,EAITW,IAJS,CAIJ,GAJI,CADb;AAME,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,aAAa,EAAE;AAA5B,SANT;AAOE,QAAA,GAAG,EAAEL,IAAI,CAACC;AAPZ;AAAA;AAAA;AAAA;AAAA,eADD,gBAWC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,EAAf;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,aAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoCD,CAlDM;KAAMH,U","sourcesContent":["/** styles */\nimport layout from \"@styles/layout.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport animation from \"@styles/animation.module.scss\";\n\n/** vectors */\nimport { Avatar, Bars } from \"@svg/original\";\n\n/**\n * Renders the menu button components\n * @param {boolean} inverse - Whether if the button takes the inverse styling or not\n */\nexport const MenuButton: React.FC<{\n  authenticated?: boolean;\n  data?: {\n    imgUrl: string;\n  };\n  inverse?: boolean;\n}> = ({\n  authenticated = false,\n  data = {\n    imgUrl:\n      \"https://images.unsplash.com/photo-1562124638-724e13052daf?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8OTV8fGZhY2V8ZW58MHwyfDB8&auto=format&fit=crop&w=500&q=60\",\n  },\n  inverse = false,\n}) => {\n  return (\n    <div\n      className={`${\n        inverse\n          ? [color[\"b-2--transparent\"]].join(\" \")\n          : [color[\"b-2--white__2\"]].join(\" \")\n      } ${[\n        layout[\"flex\"],\n        layout[\"items-center\"],\n        space[\"p-v--4\"],\n        space[\"p-l--10\"],\n        space[\"p-r--6\"],\n        color[\"bg--white\"],\n        shape[\"br--30\"],\n      ].join(\" \")}`}\n    >\n      <div className={[space[\"m-r--10\"]].join(\" \")}>\n        <Bars fill=\"black\" width={12} />\n      </div>\n      <div>\n        {authenticated && data ? (\n          <img\n            className={[\n              shape[\"br--circle\"],\n              shape[\"w--30\"],\n              layout[\"vertical--bottom\"],\n            ].join(\" \")}\n            style={{ width: 30, verticalAlign: \"bottom\" }}\n            src={data.imgUrl}\n          />\n        ) : (\n          <Avatar width={30} fill=\"gray\" />\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}