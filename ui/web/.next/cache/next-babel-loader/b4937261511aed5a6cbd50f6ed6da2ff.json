{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n/** logic */\n\nimport { renderShape } from \"./logic/logic.address\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange - handles key press event\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport var TextInput = function TextInput(_ref) {\n  var _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"text\" : _ref$name,\n      handleChange = _ref.handleChange,\n      value = _ref.value,\n      direction = _ref.direction,\n      placeholder = _ref.placeholder;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"\".concat([shape[\"h--50\"], input[\"outside\"], layout[\"relative\"], space[\"p-v--6\"], space[\"p-h--12\"], layout[\"items-center\"]].join(\" \"), \" \").concat(renderShape(direction), \" \").concat(active ? [color[\"b-2--black\"]].join(\" \") : [color[\"b--white__3\"]].join(\" \")),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsx(\"input\", {\n        autoFocus: true,\n        id: name,\n        name: name,\n        type: \"text\",\n        onChange: handleChange,\n        onFocus: function onFocus() {\n          return setActive(true);\n        },\n        onBlur: function onBlur() {\n          return setActive(false);\n        },\n        value: value,\n        className: \"\".concat([space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--14\"], font[\"weight--100\"], color[\"c__placeholder--black\"]].join(\" \"), \" \"),\n        style: {\n          outline: \"none\"\n        },\n        placeholder: placeholder\n      })\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}