{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer, useContext } from \"react\";\nvar ToggleStateContext = /*#__PURE__*/createContext(undefined);\nvar ToggleDispatchContext = /*#__PURE__*/createContext(undefined);\n\nvar toggleReducer = function toggleReducer(state, action) {\n  switch (action.type) {\n    case \"toggle_privacy\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        privacy: !state.privacy\n      });\n\n    case \"toggle_menu\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menu: !state.menu\n      });\n\n    case \"toggle_auth\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        auth: !state.auth,\n        menu: !state.menu\n      });\n\n    case \"toggle_globe\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        globe: !state.globe\n      });\n\n    case \"toggle_location\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        location: !state.location,\n        guests: false,\n        check: false\n      });\n\n    case \"toggle_guests\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        guests: !state.guests,\n        location: false,\n        check: false\n      });\n\n    case \"toggle_checkin\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkin: !state.checkin,\n        checkout: false,\n        location: false,\n        guests: false\n      });\n\n    case \"toggle_checkout\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkout: !state.checkout,\n        checkin: false,\n        location: false,\n        guests: false\n      });\n\n    case \"close_register\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        auth: !state.auth\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar ToggleProvider = function ToggleProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(toggleReducer, {\n    privacy: true,\n    menu: false,\n    auth: false,\n    globe: false,\n    location: false,\n    guests: false,\n    checkin: false,\n    checkout: false\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsx(ToggleStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsx(ToggleDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    })\n  });\n};\n\nvar useToggleState = function useToggleState() {\n  var context = useContext(ToggleStateContext);\n\n  if (!context) {\n    throw new Error(\"useToggleState must be used within a ToggleProvider\");\n  }\n\n  return context;\n};\n\nvar useToggleDispatch = function useToggleDispatch() {\n  var context = useContext(ToggleDispatchContext);\n\n  if (!context) {\n    throw new Error(\"useToggleDispatch must be used within a ToggleProvider\");\n  }\n\n  return context;\n};\n\nexport { useToggleDispatch, useToggleState, ToggleProvider };","map":null,"metadata":{},"sourceType":"module"}