{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from \"react\";\n/** vectors */\n\nimport { Globe } from \"@svg/regular\";\n/** styles */\n\nimport layout from \"@styles/layout.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport color from \"@styles/color.module.scss\";\nexport var Content = function Content(_ref) {\n  var _ref$kind = _ref.kind,\n      kind = _ref$kind === void 0 ? \"globe\" : _ref$kind,\n      _ref$inverse = _ref.inverse,\n      inverse = _ref$inverse === void 0 ? false : _ref$inverse;\n  var kinds = {\n    globe: /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: [layout[\"items-center\"], space[\"m-r--8\"]].join(\" \"),\n        children: /*#__PURE__*/_jsx(Globe, {\n          width: 14,\n          fill: inverse ? \"white\" : \"#363636\"\n        })\n      })\n    }),\n    host: /*#__PURE__*/_jsx(\"h4\", {\n      className: \"\".concat([font[\"size--12\"]].join(\" \"), \" \").concat(inverse ? color[\"c--white\"] : color[\"c--gray__4\"]),\n      children: \"Become a host\"\n    })\n  };\n  return kinds[kind];\n};","map":null,"metadata":{},"sourceType":"module"}