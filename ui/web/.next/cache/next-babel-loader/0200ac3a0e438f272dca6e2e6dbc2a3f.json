{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\n/** styles */\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\nimport { styleLabel, styleContainer, styleInput } from \"./styling.text\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange - Handles event triggered\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport const NameInput = ({\n  handleChange,\n  value,\n  direction,\n  name = \"firstname\",\n  errors = false\n}) => {\n  const names = {\n    firstname: \"First name\",\n    lastname: \"Last name\"\n  };\n  const {\n    0: fieldActive,\n    1: setFieldActive\n  } = useState(false);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [color[\"b-b--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"bbr--10\"]].join(\" \");\n\n      case \"bottom\":\n        return [color[\"b-t--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"btr--10\"]].join(\" \");\n\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      height: 60\n    },\n    className: `${[input[\"outside\"], layout[\"relative\"], space[\"p-v--6\"], space[\"p-h--12\"], layout[\"items-center\"]].join(\" \")} ${renderShape()} ${styleContainer(errors, fieldActive, value)}`,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        autoFocus: true,\n        id: name,\n        name: name,\n        type: \"text\",\n        onChange: handleChange,\n        value: value,\n        onFocus: activateField,\n        onBlur: deactivateField,\n        className: `${[space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], color[\"c__placeholder--black\"], input[\"input\"]].join(\" \")} ${styleInput(errors, fieldActive, value)}`,\n        placeholder: fieldActive ? names[name] : undefined\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: name,\n        className: `${[layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \")} ${styleLabel(errors, fieldActive, value, value)}`,\n        children: names[name]\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}