{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/** styles */\nimport layout from \"@styles/layout.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\n\n/** vectors */\nimport { Avatar, Bars } from \"@svg/original\";\n/**\n * Renders the menu button components\n * @param {boolean} inverse - Whether if the button takes the inverse styling or not\n */\n\nexport var MenuButton = function MenuButton(_ref) {\n  var _ref$authenticated = _ref.authenticated,\n      authenticated = _ref$authenticated === void 0 ? false : _ref$authenticated,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {\n    imgUrl: \"https://images.unsplash.com/photo-1562124638-724e13052daf?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8OTV8fGZhY2V8ZW58MHwyfDB8&auto=format&fit=crop&w=500&q=60\"\n  } : _ref$data,\n      _ref$inverse = _ref.inverse,\n      inverse = _ref$inverse === void 0 ? false : _ref$inverse;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"\".concat(inverse ? [color[\"b-2--transparent\"]].join(\" \") : [color[\"b-2--white__2\"]].join(\" \"), \" \").concat([layout[\"flex\"], layout[\"items-center\"], space[\"p-v--4\"], space[\"p-l--10\"], space[\"p-r--6\"], color[\"bg--white\"], shape[\"br--30\"]].join(\" \")),\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: [space[\"m-r--10\"]].join(\" \"),\n      children: /*#__PURE__*/_jsx(Bars, {\n        fill: \"black\",\n        width: 12\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: authenticated && data ? /*#__PURE__*/_jsx(\"img\", {\n        className: [shape[\"br--circle\"], shape[\"w--30\"], layout[\"vertical--bottom\"]].join(\" \"),\n        style: {\n          width: 30,\n          verticalAlign: \"bottom\"\n        },\n        src: data.imgUrl\n      }) : /*#__PURE__*/_jsx(Avatar, {\n        width: 30,\n        fill: \"gray\"\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}