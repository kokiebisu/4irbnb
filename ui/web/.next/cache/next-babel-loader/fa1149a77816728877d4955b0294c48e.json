{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.option.tsx\",\n    _this = this;\n\n/** styles */\nimport font from \"@styles/font.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport animation from \"@styles/animation.module.scss\";\n/**\n * Renders the option button components\n * @param {string} options - Type of option button\n * @param {boolean} bold - Whether if the option button is styled bold\n */\n\nexport var OptionButton = function OptionButton(_ref) {\n  var _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"Option\" : _ref$name,\n      _ref$bold = _ref.bold,\n      bold = _ref$bold === void 0 ? false : _ref$bold;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\".concat([font[\"text--left\"], font[\"size--13\"], color[\"bg--white\"], space[\"p-h--14\"], space[\"p-v--10\"], layout[\"block\"], animation[\"hover-background--white__1\"]].join(\" \"), \" \").concat(bold ? [font[\"weight--500\"]].join(\" \") : [font[\"weight--300\"]].join(\" \")),\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n_c = OptionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionButton\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.option.tsx"],"names":["font","color","space","layout","animation","OptionButton","name","bold","join"],"mappings":";;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,YAAyD,GAAG,SAA5DA,YAA4D,OAGnE;AAAA,uBAFJC,IAEI;AAAA,MAFJA,IAEI,0BAFG,QAEH;AAAA,uBADJC,IACI;AAAA,MADJA,IACI,0BADG,KACH;AACJ,sBACE;AACE,IAAA,SAAS,YAAK,CACZP,IAAI,CAAC,YAAD,CADQ,EAEZA,IAAI,CAAC,UAAD,CAFQ,EAGZC,KAAK,CAAC,WAAD,CAHO,EAIZC,KAAK,CAAC,SAAD,CAJO,EAKZA,KAAK,CAAC,SAAD,CALO,EAMZC,MAAM,CAAC,OAAD,CANM,EAOZC,SAAS,CAAC,4BAAD,CAPG,EAQZI,IARY,CAQP,GARO,CAAL,cASPD,IAAI,GAAG,CAACP,IAAI,CAAC,aAAD,CAAL,EAAsBQ,IAAtB,CAA2B,GAA3B,CAAH,GAAqC,CAACR,IAAI,CAAC,aAAD,CAAL,EAAsBQ,IAAtB,CAA2B,GAA3B,CATlC,CADX;AAAA,cAaGF;AAbH;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CArBM;KAAMD,Y","sourcesContent":["/** styles */\nimport font from \"@styles/font.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport animation from \"@styles/animation.module.scss\";\n\n/**\n * Renders the option button components\n * @param {string} options - Type of option button\n * @param {boolean} bold - Whether if the option button is styled bold\n */\nexport const OptionButton: React.FC<{ name?: string; bold?: boolean }> = ({\n  name = \"Option\",\n  bold = false,\n}) => {\n  return (\n    <div\n      className={`${[\n        font[\"text--left\"],\n        font[\"size--13\"],\n        color[\"bg--white\"],\n        space[\"p-h--14\"],\n        space[\"p-v--10\"],\n        layout[\"block\"],\n        animation[\"hover-background--white__1\"],\n      ].join(\" \")} ${\n        bold ? [font[\"weight--500\"]].join(\" \") : [font[\"weight--300\"]].join(\" \")\n      }`}\n    >\n      {name}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}