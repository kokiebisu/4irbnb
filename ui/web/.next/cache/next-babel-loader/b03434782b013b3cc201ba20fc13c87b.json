{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.closed.tsx\",\n    _this = this;\n\n/** vectors */\nimport { CheckPlain, Close } from \"@svg/original\";\nexport var ClosedButton = function ClosedButton(_ref) {\n  var _ref$content = _ref.content,\n      content = _ref$content === void 0 ? \"close\" : _ref$content,\n      _ref$selected = _ref.selected,\n      selected = _ref$selected === void 0 ? false : _ref$selected;\n  var contents = {\n    close: /*#__PURE__*/_jsxDEV(Close, {\n      width: 16,\n      fill: selected,\n      stroke: selected ? \"white\" : \"black\",\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this),\n    check: /*#__PURE__*/_jsxDEV(CheckPlain, {\n      width: 16,\n      fill: selected,\n      stroke: selected ? \"white\" : \"black\",\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 5,\n      borderRadius: 9999,\n      backgroundColor: selected ? \"black\" : \"white\",\n      border: \"1px solid \".concat(selected ? \"black\" : \"lightgray\")\n    },\n    children: contents[content]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n_c = ClosedButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClosedButton\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.closed.tsx"],"names":["CheckPlain","Close","ClosedButton","content","selected","contents","close","check","display","justifyContent","alignItems","padding","borderRadius","backgroundColor","border"],"mappings":";;;;;AAAA;AACA,SAASA,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,OAAO,IAAMC,YAGX,GAAG,SAHQA,YAGR,OAA6C;AAAA,0BAA1CC,OAA0C;AAAA,MAA1CA,OAA0C,6BAAhC,OAAgC;AAAA,2BAAvBC,QAAuB;AAAA,MAAvBA,QAAuB,8BAAZ,KAAY;AAChD,MAAMC,QAAQ,GAAG;AACfC,IAAAA,KAAK,eACH,QAAC,KAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,IAAI,EAAEF,QAFR;AAGE,MAAA,MAAM,EAAEA,QAAQ,GAAG,OAAH,GAAa,OAH/B;AAIE,MAAA,WAAW,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,aAFa;AASfG,IAAAA,KAAK,eACH,QAAC,UAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,IAAI,EAAEH,QAFR;AAGE,MAAA,MAAM,EAAEA,QAAQ,GAAG,OAAH,GAAa,OAH/B;AAIE,MAAA,WAAW,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA;AAVa,GAAjB;AAkBA,sBACE;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,OAAO,EAAE,CAJJ;AAKLC,MAAAA,YAAY,EAAE,IALT;AAMLC,MAAAA,eAAe,EAAET,QAAQ,GAAG,OAAH,GAAa,OANjC;AAOLU,MAAAA,MAAM,sBAAeV,QAAQ,GAAG,OAAH,GAAa,WAApC;AAPD,KADT;AAAA,cAWGC,QAAQ,CAACF,OAAD;AAXX;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CArCM;KAAMD,Y","sourcesContent":["/** vectors */\nimport { CheckPlain, Close } from \"@svg/original\";\n\nexport const ClosedButton: React.FC<{\n  selected?: boolean;\n  content?: string;\n}> = ({ content = \"close\", selected = false }) => {\n  const contents = {\n    close: (\n      <Close\n        width={16}\n        fill={selected}\n        stroke={selected ? \"white\" : \"black\"}\n        strokeWidth={2}\n      />\n    ),\n    check: (\n      <CheckPlain\n        width={16}\n        fill={selected}\n        stroke={selected ? \"white\" : \"black\"}\n        strokeWidth={2}\n      />\n    ),\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 5,\n        borderRadius: 9999,\n        backgroundColor: selected ? \"black\" : \"white\",\n        border: `1px solid ${selected ? \"black\" : \"lightgray\"}`,\n      }}\n    >\n      {contents[content]}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}