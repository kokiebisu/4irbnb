{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\nimport { styleContainer } from \"./styling.select\";\n/** vectors */\n\nimport { ChevronDown, ChevronTop } from \"@svg/regular\";\n/** Options */\n\nimport { inputTypes } from \"./logic/logic.types\";\nimport { renderShape } from \"./logic/logic.select\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport var SelectInput = function SelectInput(_ref) {\n  var handleChange = _ref.handleChange,\n      value = _ref.value,\n      direction = _ref.direction,\n      _ref$errors = _ref.errors,\n      errors = _ref$errors === void 0 ? false : _ref$errors,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$inputType = _ref.inputType,\n      inputType = _ref$inputType === void 0 ? \"Bed and breakfast\" : _ref$inputType;\n\n  var _useState = useState(false),\n      fieldActive = _useState[0],\n      setFieldActive = _useState[1];\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"\".concat([shape[\"h--50\"], layout[\"flex\"], input[\"outside\"], layout[\"relative\"], layout[\"items-center\"]].join(\" \"), \" \"),\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"\".concat(renderShape(direction), \" \").concat(styleContainer(errors, fieldActive, value)),\n      style: {\n        borderColor: disabled ? \"#EBEBEB\" : \"#B0B0B0\",\n        padding: \"0 12px\",\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        backgroundColor: disabled ? \"#F7F7F7\" : \"white\"\n      },\n      children: [/*#__PURE__*/_jsxs(\"select\", {\n        style: {\n          height: \"100%\",\n          outline: \"none\"\n        },\n        id: inputType,\n        disabled: disabled,\n        onChange: handleChange,\n        value: value,\n        onFocus: function onFocus() {\n          return setFieldActive(true);\n        },\n        onBlur: function onBlur() {\n          return setFieldActive(false);\n        },\n        className: \"\".concat([color[\"bg--transparent\"], layout[\"justify-between\"], shape[\"br--4\"], space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--14\"], font[\"weight--300\"]].join(\" \")),\n        children: [inputTypes[inputType][\"default\"] && /*#__PURE__*/_jsx(\"option\", {\n          disabled: true,\n          value: inputTypes[inputType][\"default\"],\n          children: inputTypes[inputType][\"default\"]\n        }), inputTypes[inputType].options]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: [layout[\"flex\"], layout[\"items-center\"]].join(\" \"),\n        children: fieldActive ? /*#__PURE__*/_jsx(ChevronTop, {\n          width: 13\n        }) : /*#__PURE__*/_jsx(ChevronDown, {\n          width: 13,\n          fill: disabled ? \"#DDDDDD\" : \"black\"\n        })\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}