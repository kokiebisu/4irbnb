{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\n\n/** components */\nimport { Button } from \"@button\";\n/** styles */\n\nimport button from \"@button/button.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport animation from \"@styles/animation.module.scss\";\nexport default {\n  title: \"Atoms/Button\",\n  component: Button,\n  argTypes: {\n    inverse: {\n      control: \"boolean\"\n    },\n    variant: {\n      control: {\n        disable: true\n      }\n    },\n    icon: {\n      control: {\n        disable: true\n      }\n    },\n    to: {\n      control: {\n        disable: true\n      }\n    },\n    extendsTo: {\n      control: {\n        disable: true\n      }\n    }\n  }\n};\nconst disableInverse = {\n  inverse: {\n    control: {\n      disable: true\n    }\n  }\n};\nconst disableTitle = {\n  title: {\n    control: {\n      disable: true\n    }\n  }\n};\n\nconst TemplateStory = args => /*#__PURE__*/_jsx(Button, _objectSpread({}, args));\n\nexport const Transparent = TemplateStory.bind({});\nTransparent.args = {\n  variant: \"transparent\",\n  content: /*#__PURE__*/_jsx(\"h3\", {\n    className: [font[\"size--15\"]].join(\" \"),\n    children: \"Button\"\n  })\n};\nexport const Globe = TemplateStory.bind({});\nGlobe.args = {\n  variant: \"globe\",\n  extendsTo: [font[\"text--left\"]].join(\" \")\n};\nGlobe.argTypes = {\n  selected: {\n    control: \"boolean\"\n  }\n};\nexport const Menu = TemplateStory.bind({});\nMenu.args = {\n  variant: \"menu\",\n  extendsTo: [animation[\"hover-shadow--lg\"], shape[\"br--30\"]].join(\" \")\n};\nMenu.argTypes = _objectSpread(_objectSpread({}, disableTitle), {}, {\n  user: {\n    control: \"boolean\"\n  }\n});\nexport const Privacy = TemplateStory.bind({});\nPrivacy.args = {\n  variant: \"privacy\"\n};\nPrivacy.decorators = [Story => /*#__PURE__*/_jsx(\"div\", {\n  style: {\n    width: 300\n  },\n  children: /*#__PURE__*/_jsx(Story, {})\n})];\nexport const Border = TemplateStory.bind({});\nBorder.args = {\n  variant: \"border\",\n  extendsTo: [color[\"bg--transparent\"]].join(\" \")\n};\nBorder.argTypes = {\n  size: {\n    control: {\n      type: \"select\",\n      options: [\"sm\", \"md\", \"lg\"]\n    }\n  },\n  bold: {\n    control: \"boolean\"\n  }\n};\nexport const Banner = TemplateStory.bind({});\nBanner.args = {\n  variant: \"banner\",\n  extendsTo: [color[\"bg--white\"], shape[\"br--6\"]].join(\" \")\n};\nBanner.argTypes = _objectSpread({}, disableInverse);\nBanner.decorators = [Story => /*#__PURE__*/_jsx(\"div\", {\n  style: {\n    width: 200\n  },\n  children: /*#__PURE__*/_jsx(Story, {})\n})];\nexport const Primary = TemplateStory.bind({});\nPrimary.args = {\n  variant: \"primary\"\n};\nPrimary.decorators = [Story => /*#__PURE__*/_jsx(\"div\", {\n  style: {\n    width: 300\n  },\n  children: /*#__PURE__*/_jsx(Story, {})\n})];\nPrimary.argTypes = _objectSpread(_objectSpread({}, disableInverse), {}, {\n  loading: {\n    control: \"boolean\"\n  }\n});\nexport const Searchbar = TemplateStory.bind({});\nSearchbar.args = {\n  variant: \"searchbar\"\n};\nSearchbar.argTypes = _objectSpread(_objectSpread({}, disableInverse), {}, {\n  mini: {\n    control: \"boolean\"\n  }\n});\nexport const Auth = TemplateStory.bind({});\nAuth.args = {\n  variant: \"auth\",\n  extendsTo: [button[\"hover__auth\"], color[\"bg--transparent\"], layout[\"block\"], shape[\"w--full\"], space[\"p-h--12\"], space[\"p-v--12\"], shape[\"br--8\"]].join(\" \")\n};\nAuth.decorators = [Story => /*#__PURE__*/_jsx(\"div\", {\n  style: {\n    width: 300\n  },\n  children: /*#__PURE__*/_jsx(Story, {})\n})];\nAuth.argTypes = {\n  auth: {\n    control: {\n      type: \"select\",\n      options: [\"email\", \"facebook\", \"google\", \"apple\"]\n    }\n  }\n};\nexport const Paginate = TemplateStory.bind({});\nPaginate.args = {\n  variant: \"paginate\"\n};\nPaginate.argTypes = {\n  direction: {\n    control: {\n      type: \"select\",\n      options: [\"left\", \"right\"]\n    }\n  }\n};\nexport const Option = TemplateStory.bind({});\nOption.args = {\n  variant: \"option\",\n  extendsTo: [shape[\"w--full\"]].join(\" \")\n};\nexport const Underline = TemplateStory.bind({});\nUnderline.args = {\n  variant: \"underline\"\n};\nexport const Filter = TemplateStory.bind({});\nFilter.args = {\n  variant: \"filter\"\n};\nexport const Modal = TemplateStory.bind({});\nModal.args = {\n  variant: \"modal\"\n};\nModal.argTypes = {\n  modalType: {\n    control: {\n      type: \"select\",\n      options: [\"close\", \"back\"]\n    }\n  }\n};\nexport const Back = TemplateStory.bind({});\nBack.args = {\n  variant: \"back\"\n};\nexport const Link = TemplateStory.bind({});\nLink.args = {\n  variant: \"link\"\n};\nexport const Search = TemplateStory.bind({});\nSearch.args = {\n  variant: \"search\"\n};\nSearch.argTypes = {\n  expand: {\n    control: \"boolean\"\n  }\n};\nexport const Expand = TemplateStory.bind({});\nExpand.args = {\n  variant: \"expand\"\n};\nexport const Location = TemplateStory.bind({});\nLocation.args = {\n  variant: \"location\"\n};\nLocation.argTypes = {\n  type: {\n    control: {\n      type: \"select\",\n      options: [\"explore\", \"recent\"]\n    }\n  }\n};\nexport const Nearby = TemplateStory.bind({});\nNearby.args = {\n  variant: \"nearby\"\n};","map":null,"metadata":{},"sourceType":"module"}