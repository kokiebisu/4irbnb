{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer, useContext } from \"react\";\nvar AuthStateContext = /*#__PURE__*/createContext(undefined);\nvar AuthDispatchContext = /*#__PURE__*/createContext(undefined);\n\nvar authReducer = function authReducer(state, action) {\n  switch (action.type) {\n    case \"auth_login\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        display: \"auth\",\n        title: \"Log in\"\n      });\n\n    case \"auth_signup\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        display: \"auth\",\n        title: \"Sign in\"\n      });\n\n    case \"login\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        display: \"login\",\n        title: \"Log in\"\n      });\n\n    case \"signup\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        display: \"signup\",\n        title: \"Finish signing up\"\n      });\n\n    case \"forgot_password\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        display: \"forgot_password\",\n        title: \"Forgot password\"\n      });\n\n    case \"exists\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        display: \"exists\",\n        title: \"Account exists\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(authReducer, {\n    display: \"auth\",\n    title: \"Log in\"\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsx(AuthStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsx(AuthDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    })\n  });\n};\n\nvar useAuthState = function useAuthState() {\n  var context = useContext(AuthStateContext);\n\n  if (!context) {\n    throw new Error(\"useAuthState must be used within a ToggleProvider\");\n  }\n\n  return context;\n};\n\nvar useAuthDispatch = function useAuthDispatch() {\n  var context = useContext(AuthDispatchContext);\n\n  if (!context) {\n    throw new Error(\"useAuthDispatch must be used within a ToggleProvider\");\n  }\n\n  return context;\n};\n\nexport { useAuthDispatch, useAuthState, AuthProvider };","map":null,"metadata":{},"sourceType":"module"}