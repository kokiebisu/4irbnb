{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLayoutEffect, useState, useRef } from \"react\";\n/** components */\n\nimport { Button } from \"@button\";\n/** styles **/\n\nimport particle from \"@particle/particle.module.scss\";\n/** stories */\n\nimport { Paginate } from \"@button/button.stories\";\n\nconst Dots = ({\n  slides,\n  activeSlide\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: 25,\n      width: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: slides.map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n      style: {\n        transition: \"all 0.2s ease-in\",\n        padding: 3,\n        marginRight: 5,\n        cursor: \"pointer\",\n        borderRadius: \"50%\",\n        background: `${activeSlide === index ? \"white\" : \"lightgray\"}`\n      }\n    }, index))\n  });\n};\n\nconst Slide = ({\n  slide\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundImage: slide && `url(${slide})`,\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      backgroundColor: !slide && \"lightgray\"\n    }\n  });\n};\n\nexport const ImageSlider = ({\n  slides = [undefined, undefined, undefined]\n}) => {\n  const {\n    0: style,\n    1: setStyle\n  } = useState({\n    opacity: 0\n  });\n  const {\n    0: width,\n    1: setWidth\n  } = useState(1000);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    activeSlide: 0,\n    translate: 0,\n    transition: 0.45\n  });\n  const containerRef = useRef();\n\n  const handleRef = () => {\n    if (containerRef.current && containerRef.current.getBoundingClientRect()) {\n      setWidth(containerRef.current.getBoundingClientRect().width);\n    }\n  };\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", handleRef);\n    handleRef();\n    return () => {\n      window.removeEventListener(\"resize\", handleRef);\n    };\n  });\n\n  const previousSlide = () => {\n    if (state.activeSlide === 0) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        translate: (slides.length - 1) * width,\n        activeSlide: slides.length - 1\n      }));\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      activeSlide: state.activeSlide - 1,\n      translate: (state.activeSlide - 1) * width\n    }));\n  };\n\n  const nextSlide = () => {\n    if (state.activeSlide === slides.length - 1) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        translate: 0,\n        activeSlide: 0\n      }));\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      activeSlide: state.activeSlide + 1,\n      translate: (state.activeSlide + 1) * width\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: containerRef,\n    onMouseEnter: () => setStyle({\n      opacity: 1\n    }),\n    onMouseLeave: () => setStyle({\n      opacity: 0\n    }),\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      borderRadius: 12,\n      zIndex: 50\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        borderRadius: 12,\n        transform: `translateX(-${state.translate}px)`,\n        transition: `transform ease-out ${state.transition}s`,\n        height: \"100%\",\n        width: width * slides.length,\n        display: \"flex\"\n      },\n      children: slides.map((slide, index) => {\n        return /*#__PURE__*/_jsx(Slide, {\n          slide: slide\n        }, index);\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        transition: \"opacity 0.2s ease-out\",\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        left: 10,\n        zIndex: 60\n      }),\n      children: /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({}, Paginate.args), {}, {\n        animate: true,\n        direction: \"left\",\n        onClick: previousSlide\n      }))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        transition: \"opacity 0.2s ease-out\",\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        right: 10,\n        zIndex: 60\n      }),\n      children: /*#__PURE__*/_jsx(Button, {\n        variant: \"paginate\",\n        animate: true,\n        direction: \"right\",\n        onClick: nextSlide\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        transition: \"opacity 0.2s ease-out\"\n      }),\n      className: [particle[\"dots\"]].join(\" \"),\n      children: /*#__PURE__*/_jsx(Dots, {\n        slides: slides,\n        activeSlide: state.activeSlide\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}