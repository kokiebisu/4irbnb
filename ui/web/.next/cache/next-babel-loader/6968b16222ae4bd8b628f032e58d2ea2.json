{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n/** Styling */\n\nimport { styleInput, styleLabel, styleContainer } from \"./styling.text\";\n/** components */\n\nimport { Button } from \"@button\";\n/** Helper */\n\nimport { checkPassword } from \"@helper/auth\";\n/** stories */\n\nimport { Underline } from \"@button/button.stories\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport const PasswordInput = ({\n  handleChange,\n  value,\n  direction,\n  errors = false\n}) => {\n  const {\n    0: fieldActive,\n    1: setFieldActive\n  } = useState(false);\n  const {\n    0: hide,\n    1: setHide\n  } = useState(true);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [color[\"b-b--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"bbr--10\"]].join(\" \");\n\n      case \"bottom\":\n        return [color[\"b-t--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"btr--10\"]].join(\" \");\n\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      height: 60\n    },\n    className: `${[input[\"outside\"], layout[\"relative\"], space[\"p-v--6\"], space[\"p-h--12\"], layout[\"flex\"], layout[\"items-center\"]].join(\" \")} ${renderShape()} ${styleContainer(errors, fieldActive, checkPassword(value))}`,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        autoFocus: true,\n        id: \"password\",\n        name: \"password\",\n        type: hide ? \"password\" : \"text\",\n        onChange: handleChange,\n        value: value,\n        onFocus: activateField,\n        onBlur: deactivateField,\n        className: `${[space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], color[\"c__placeholder--black\"], input[\"input\"]].join(\" \")} ${styleInput(errors, fieldActive, checkPassword(value))}`,\n        placeholder: fieldActive ? \"Password\" : undefined\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"password\",\n        className: `${[layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \")} ${styleLabel(errors, fieldActive, checkPassword(value), value)}`,\n        children: \"Password\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: [layout[\"flex\"], layout[\"items-center\"], layout[\"justify-center\"], space[\"m-l--18\"]].join(\" \"),\n      children: /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({}, Underline.args), {}, {\n        onClick: () => setHide(prevHide => !prevHide),\n        font: 13,\n        title: hide ? \"Show\" : \"Hide\"\n      }))\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}