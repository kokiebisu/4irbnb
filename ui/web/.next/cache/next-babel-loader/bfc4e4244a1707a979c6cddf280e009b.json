{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\n/** components */\n\nimport { LoadingAnimation } from \"./animation.loading\";\n\n/**\n * Bundles the animation components\n * @param {string} type - Specifies the type of animation component\n */\nexport var Animation = function Animation(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"loading\" : _ref$type,\n      extendsTo = _ref.extendsTo,\n      props = _objectWithoutProperties(_ref, [\"type\", \"extendsTo\"]);\n\n  var types = {\n    loading: /*#__PURE__*/_jsx(LoadingAnimation, _objectSpread({}, props))\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    \"data-testid\": \"animation\",\n    className: extendsTo,\n    children: types[type]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}