{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/prototype/globe/index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** globe templates */\nimport { LanguagePrototype } from \"@prototype/globe/prototype.language\";\nimport { CurrencyPrototype } from \"@prototype/globe/prototype.currency\";\nexport var Prototype = function Prototype(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"nearby\" : _ref$variant,\n      _ref$city = _ref.city,\n      city = _ref$city === void 0 ? \"Paris\" : _ref$city,\n      _ref$stayType = _ref.stayType,\n      stayType = _ref$stayType === void 0 ? \"house\" : _ref$stayType,\n      characteristics = _ref.characteristics,\n      props = _objectWithoutProperties(_ref, [\"variant\", \"city\", \"stayType\", \"characteristics\"]);\n\n  var variants = {\n    language: /*#__PURE__*/_jsxDEV(LanguagePrototype, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }, _this),\n    currency: /*#__PURE__*/_jsxDEV(CurrencyPrototype, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, _this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"\".concat(variant, \"-globe-template\"),\n    children: variants[variant]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n_c = Prototype;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prototype\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/prototype/globe/index.tsx"],"names":["LanguagePrototype","CurrencyPrototype","Prototype","variant","city","stayType","characteristics","props","variants","language","currency"],"mappings":";;;;;;;;;;;AAAA;AACA,SAASA,iBAAT,QAAkC,qCAAlC;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AAUA,OAAO,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAM7C;AAAA,0BALJC,OAKI;AAAA,MALJA,OAKI,6BALM,QAKN;AAAA,uBAJJC,IAII;AAAA,MAJJA,IAII,0BAJG,OAIH;AAAA,2BAHJC,QAGI;AAAA,MAHJA,QAGI,8BAHO,OAGP;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADDC,KACC;;AACJ,MAAMC,QAA4C,GAAG;AACnDC,IAAAA,QAAQ,eAAE,QAAC,iBAAD,oBAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA,aADyC;AAEnDG,IAAAA,QAAQ,eAAE,QAAC,iBAAD,oBAAuBH,KAAvB;AAAA;AAAA;AAAA;AAAA;AAFyC,GAArD;AAIA,sBACE;AAAK,6BAAgBJ,OAAhB,oBAAL;AAAA,cAAgDK,QAAQ,CAACL,OAAD;AAAxD;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAdM;KAAMD,S","sourcesContent":["/** globe templates */\nimport { LanguagePrototype } from \"@prototype/globe/prototype.language\";\nimport { CurrencyPrototype } from \"@prototype/globe/prototype.currency\";\n\nexport interface PrototypeProps {\n  variant?: string;\n  place?: string;\n  stayType?: string | string[];\n  characteristics?: string;\n  [property: string]: any;\n}\n\nexport const Prototype: React.FC<PrototypeProps> = ({\n  variant = \"nearby\",\n  city = \"Paris\",\n  stayType = \"house\",\n  characteristics,\n  ...props\n}) => {\n  const variants: { [variant: string]: JSX.Element } = {\n    language: <LanguagePrototype {...props} />,\n    currency: <CurrencyPrototype {...props} />,\n  };\n  return (\n    <div data-testid={`${variant}-globe-template`}>{variants[variant]}</div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}