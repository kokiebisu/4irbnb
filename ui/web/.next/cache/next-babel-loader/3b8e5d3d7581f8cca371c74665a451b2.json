{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.paginate.tsx\";\n\n/** styles **/\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport button from \"@button/button.module.scss\";\n/** vectors */\n\nimport { ChevronLeft, ChevronRight } from \"@svg/regular\";\n/**\n * Renders the paginate button component\n * @param {string} direction - The direction in which the arrow points\n * @param {boolean} disable - Whether if the button is disabled or not\n */\n\nexport const PaginateButton = ({\n  direction = \"left\",\n  disable = false\n}) => {\n  const icons = {\n    left: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n      width: 10,\n      stroke: `${disable ? \"lightgray\" : \"black\"}`,\n      strokeWidth: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this),\n    right: /*#__PURE__*/_jsxDEV(ChevronRight, {\n      width: 10,\n      stroke: `${disable ? \"lightgray\" : \"black\"}`,\n      strokeWidth: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [button[\"bg__paginate\"], space[\"p--8\"], color[\"b--white__2\"], shape[\"br--circle\"]].join(\" \"),\n      children: icons[direction]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/button/button.paginate.tsx"],"names":["color","space","shape","button","ChevronLeft","ChevronRight","PaginateButton","direction","disable","icons","left","right","join"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA;;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,cAA1C;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAGX,GAAG,CAAC;AAAEC,EAAAA,SAAS,GAAG,MAAd;AAAsBC,EAAAA,OAAO,GAAG;AAAhC,CAAD,KAA6C;AAChD,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,eACF,QAAC,WAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,MAAM,EAAG,GAAEF,OAAO,GAAG,WAAH,GAAiB,OAAQ,EAF7C;AAGE,MAAA,WAAW,EAAE;AAHf;AAAA;AAAA;AAAA;AAAA,YAFU;AAQZG,IAAAA,KAAK,eACH,QAAC,YAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,MAAM,EAAG,GAAEH,OAAO,GAAG,WAAH,GAAiB,OAAQ,EAF7C;AAGE,MAAA,WAAW,EAAE;AAHf;AAAA;AAAA;AAAA;AAAA;AATU,GAAd;AAgBA,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAE,CACTL,MAAM,CAAC,cAAD,CADG,EAETF,KAAK,CAAC,MAAD,CAFI,EAGTD,KAAK,CAAC,aAAD,CAHI,EAITE,KAAK,CAAC,YAAD,CAJI,EAKTU,IALS,CAKJ,GALI,CADb;AAAA,gBAQGH,KAAK,CAACF,SAAD;AARR;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAlCM","sourcesContent":["/** styles **/\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport button from \"@button/button.module.scss\";\n\n/** vectors */\nimport { ChevronLeft, ChevronRight } from \"@svg/regular\";\n\n/**\n * Renders the paginate button component\n * @param {string} direction - The direction in which the arrow points\n * @param {boolean} disable - Whether if the button is disabled or not\n */\nexport const PaginateButton: React.FC<{\n  direction?: string;\n  disable?: boolean;\n}> = ({ direction = \"left\", disable = false }) => {\n  const icons = {\n    left: (\n      <ChevronLeft\n        width={10}\n        stroke={`${disable ? \"lightgray\" : \"black\"}`}\n        strokeWidth={5}\n      />\n    ),\n    right: (\n      <ChevronRight\n        width={10}\n        stroke={`${disable ? \"lightgray\" : \"black\"}`}\n        strokeWidth={5}\n      />\n    ),\n  };\n  return (\n    <>\n      <div\n        className={[\n          button[\"bg__paginate\"],\n          space[\"p--8\"],\n          color[\"b--white__2\"],\n          shape[\"br--circle\"],\n        ].join(\" \")}\n      >\n        {icons[direction]}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}