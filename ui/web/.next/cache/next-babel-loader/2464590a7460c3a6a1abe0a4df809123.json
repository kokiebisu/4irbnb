{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.name.tsx\";\nimport { useState } from \"react\";\n/** styles */\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\nimport { styleLabel, styleContainer, styleInput } from \"./styling.text\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange - Handles event triggered\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport const NameInput = ({\n  handleChange,\n  value,\n  direction,\n  name = \"firstname\",\n  errors = false\n}) => {\n  const names = {\n    firstname: \"First name\",\n    lastname: \"Last name\"\n  };\n  const {\n    0: fieldActive,\n    1: setFieldActive\n  } = useState(false);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [color[\"b-b--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"bbr--10\"]].join(\" \");\n\n      case \"bottom\":\n        return [color[\"b-t--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"btr--10\"]].join(\" \");\n\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 60\n    },\n    className: `${[input[\"outside\"], layout[\"relative\"], space[\"p-v--6\"], space[\"p-h--12\"], layout[\"items-center\"]].join(\" \")} ${renderShape()} ${styleContainer(errors, fieldActive, value)}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        id: name,\n        name: name,\n        type: \"text\",\n        onChange: handleChange,\n        value: value,\n        onFocus: activateField,\n        onBlur: deactivateField,\n        className: `${[space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], color[\"c__placeholder--black\"], input[\"input\"]].join(\" \")} ${styleInput(errors, fieldActive, value)}`,\n        placeholder: fieldActive ? names[name] : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: name,\n        className: `${[layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \")} ${styleLabel(errors, fieldActive, value, value)}`,\n        children: names[name]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.name.tsx"],"names":["useState","shape","color","space","layout","font","input","styleLabel","styleContainer","styleInput","NameInput","handleChange","value","direction","name","errors","names","firstname","lastname","fieldActive","setFieldActive","activateField","deactivateField","renderShape","join","height","position","width","undefined"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n/** styles */\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\nimport { styleLabel, styleContainer, styleInput } from \"./styling.text\";\n\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange - Handles event triggered\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\nexport const NameInput: React.FC<{\n  handleChange?: any;\n  value?: string;\n  direction?: string;\n  name?: \"first\" | \"last\";\n  errors?: boolean;\n}> = ({\n  handleChange,\n  value,\n  direction,\n  name = \"firstname\",\n  errors = false,\n}) => {\n  const names = {\n    firstname: \"First name\",\n    lastname: \"Last name\",\n  };\n  const [fieldActive, setFieldActive] = useState(false);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [\n          color[\"b-b--white__3\"],\n          color[\"b-l--white__3\"],\n          color[\"b-r--white__3\"],\n          shape[\"bbr--10\"],\n        ].join(\" \");\n      case \"bottom\":\n        return [\n          color[\"b-t--white__3\"],\n          color[\"b-l--white__3\"],\n          color[\"b-r--white__3\"],\n          shape[\"btr--10\"],\n        ].join(\" \");\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return (\n    <div\n      style={{ height: 60 }}\n      className={`${[\n        input[\"outside\"],\n        layout[\"relative\"],\n        space[\"p-v--6\"],\n        space[\"p-h--12\"],\n        layout[\"items-center\"],\n      ].join(\" \")} ${renderShape()} ${styleContainer(\n        errors,\n        fieldActive,\n        value\n      )}`}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <input\n          autoFocus={true}\n          id={name}\n          name={name}\n          type=\"text\"\n          onChange={handleChange}\n          value={value}\n          onFocus={activateField}\n          onBlur={deactivateField}\n          className={`${[\n            space[\"p--0\"],\n            shape[\"w--full\"],\n            layout[\"block\"],\n            color[\"b--0\"],\n            font[\"size--16\"],\n            font[\"weight--300\"],\n            color[\"c__placeholder--black\"],\n            input[\"input\"],\n          ].join(\" \")} ${styleInput(errors, fieldActive, value)}`}\n          placeholder={fieldActive ? names[name] : undefined}\n        />\n        <label\n          htmlFor={name}\n          className={`${[\n            layout[\"absolute\"],\n            font[\"size--12\"],\n            color[\"c--gray__1\"],\n            font[\"weight--100\"],\n            input[\"label\"],\n          ].join(\" \")} ${styleLabel(errors, fieldActive, value, value)}`}\n        >\n          {names[name]}\n        </label>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}