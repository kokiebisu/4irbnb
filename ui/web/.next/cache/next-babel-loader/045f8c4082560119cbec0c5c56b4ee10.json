{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/prototype/searchbar/index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StayPrototype } from \"@prototype/searchbar/searchbar.stay\";\nexport var Prototype = function Prototype(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"stay\" : _ref$variant,\n      props = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  var variants = {\n    stay: /*#__PURE__*/_jsxDEV(StayPrototype, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, _this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"\".concat(variant, \"-searchbar-prototype\"),\n    children: variants[variant]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n_c = Prototype;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prototype\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/prototype/searchbar/index.tsx"],"names":["StayPrototype","Prototype","variant","props","variants","stay"],"mappings":";;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,qCAA9B;AAOA,OAAO,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAG7C;AAAA,0BAFJC,OAEI;AAAA,MAFJA,OAEI,6BAFM,MAEN;AAAA,MADDC,KACC;;AACJ,MAAMC,QAA4C,GAAG;AACnDC,IAAAA,IAAI,eAAE,QAAC,aAAD,oBAAmBF,KAAnB;AAAA;AAAA;AAAA;AAAA;AAD6C,GAArD;AAGA,sBACE;AAAK,6BAAgBD,OAAhB,yBAAL;AAAA,cACGE,QAAQ,CAACF,OAAD;AADX;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAZM;KAAMD,S","sourcesContent":["import { StayPrototype } from \"@prototype/searchbar/searchbar.stay\";\n\nexport interface PrototypeProps {\n  variant?: string;\n  [property: string]: any;\n}\n\nexport const Prototype: React.FC<PrototypeProps> = ({\n  variant = \"stay\",\n  ...props\n}) => {\n  const variants: { [variant: string]: JSX.Element } = {\n    stay: <StayPrototype {...props} />,\n  };\n  return (\n    <div data-testid={`${variant}-searchbar-prototype`}>\n      {variants[variant]}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}