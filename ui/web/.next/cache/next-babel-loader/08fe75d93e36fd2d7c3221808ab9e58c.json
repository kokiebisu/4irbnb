{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n/**\n * A custom hook which calculates the scroll position\n */\n\nexport var useHandleScroll = function useHandleScroll() {\n  _s();\n\n  var _useState = useState(0),\n      scrollPosition = _useState[0],\n      setScrollPosition = _useState[1];\n\n  var handleScroll = function handleScroll() {\n    var position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    handleScroll();\n    return function () {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return scrollPosition;\n};\n\n_s(useHandleScroll, \"Q2iK3kJoTBUHGJF6VgTmVb/ctE4=\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/hooks/useHandleScroll.ts"],"names":["useState","useEffect","useHandleScroll","scrollPosition","setScrollPosition","handleScroll","position","window","pageYOffset","addEventListener","passive","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACSF,QAAQ,CAAC,CAAD,CADjB;AAAA,MAC5BG,cAD4B;AAAA,MACZC,iBADY;;AAEnC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,QAAQ,GAAGC,MAAM,CAACC,WAAxB;AACAJ,IAAAA,iBAAiB,CAACE,QAAD,CAAjB;AACD,GAHD;;AAKAL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAAgD;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAhD;AACAL,IAAAA,YAAY;AACZ,WAAO,YAAM;AACXE,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCN,YAArC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOF,cAAP;AACD,CAhBM;;GAAMD,e","sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * A custom hook which calculates the scroll position\n */\nexport const useHandleScroll = () => {\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    handleScroll();\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return scrollPosition;\n};\n"]},"metadata":{},"sourceType":"module"}