{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n/** hooks */\n\nimport useOnClickOutside from \"@hooks/useOnClickOutside\";\nimport { useLockBodyScroll } from \"@hooks/useLockBodyScroll\";\n/** components */\n\nimport { MenuModal } from \"@modal/modal.menu\";\nimport { PrivacyModal } from \"@modal/modal.privacy\";\nimport { AvailabilityModal } from \"@modal/modal.availability\";\nimport { AuthModal } from \"@modal/modal.auth\";\nimport { BookingModal } from \"@modal/modal.booking\";\nimport { GlobeModal } from \"@modal/modal.globe\";\nimport { LocationModal } from \"@modal/modal.location\";\n/** contexts */\n\nimport { useToggleDispatch } from \"@context/toggle\";\nimport { GuestsModal } from \"./modal.guests\";\nimport { CheckModal } from \"./modal.check\";\n\n/**\n * Bundles all the modal components\n * @param {string} variant - Variant of modal component\n * @param {string} extendsTo - Adds custom styling to the specified component\n * @param {string} dispatchType - The type of dispatch\n */\nexport var Modal = function Modal(_ref) {\n  var variant = _ref.variant,\n      extendsTo = _ref.extendsTo,\n      dispatch = _ref.dispatch,\n      _ref$animate = _ref.animate,\n      animate = _ref$animate === void 0 ? \"default\" : _ref$animate,\n      _ref$lock = _ref.lock,\n      lock = _ref$lock === void 0 ? false : _ref$lock,\n      props = _objectWithoutProperties(_ref, [\"variant\", \"extendsTo\", \"dispatch\", \"animate\", \"lock\"]);\n\n  var criteria = props.criteria;\n  var containerRef = useRef();\n  var toggleDispatch = useToggleDispatch();\n\n  if (lock) {\n    useLockBodyScroll();\n  }\n\n  useOnClickOutside(containerRef, function () {\n    return toggleDispatch({\n      type: \"\".concat(dispatch)\n    });\n  });\n  var animation = {\n    slideup: {\n      initial: {\n        y: 400,\n        opacity: 0\n      },\n      animate: {\n        y: 0,\n        opacity: 1\n      },\n      transition: {\n        duration: 0.4,\n        ease: \"easeOut\"\n      }\n    },\n    \"default\": {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 0.1,\n        ease: \"easeInOut\"\n      }\n    }\n  };\n  var variants = {\n    privacy: /*#__PURE__*/_jsx(PrivacyModal, _objectSpread({}, props)),\n    menu: /*#__PURE__*/_jsx(MenuModal, _objectSpread({}, props)),\n    auth: /*#__PURE__*/_jsx(AuthModal, _objectSpread({}, props)),\n    availability: /*#__PURE__*/_jsx(AvailabilityModal, _objectSpread({}, props)),\n    booking: /*#__PURE__*/_jsx(BookingModal, _objectSpread({}, props)),\n    globe: /*#__PURE__*/_jsx(GlobeModal, _objectSpread({}, props)),\n    location: /*#__PURE__*/_jsx(LocationModal, _objectSpread({}, props)),\n    guests: /*#__PURE__*/_jsx(GuestsModal, _objectSpread({}, props)),\n    checkin: /*#__PURE__*/_jsx(CheckModal, _objectSpread({}, props)),\n    checkout: /*#__PURE__*/_jsx(CheckModal, _objectSpread({}, props))\n  };\n\n  if (criteria !== undefined) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: extendsTo,\n      children: /*#__PURE__*/_jsx(AnimatePresence, {\n        children: criteria && /*#__PURE__*/_jsx(motion.div, {\n          \"data-testid\": \"\".concat(variant, \"-modal\"),\n          exit: {\n            opacity: 0\n          },\n          initial: animation[animate].initial,\n          animate: animation[animate].animate,\n          transition: animation[animate].transition,\n          ref: containerRef,\n          className: extendsTo,\n          children: variants[variant]\n        })\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: containerRef,\n    className: extendsTo,\n    \"data-testid\": \"\".concat(variant, \"-modal\"),\n    children: variants[variant]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}