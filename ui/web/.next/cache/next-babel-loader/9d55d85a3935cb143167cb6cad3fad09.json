{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Router from \"next/router\";\n/** contexts */\n\nimport { useStayDispatch, useStayState } from \"../../context/stay\";\n/** components */\n\nimport { Prototype as CreatePrototype } from \"@prototype/create\";\nimport { inputTypes, properties } from \"@input/logic/logic.types\";\nimport { Layout } from \"@layout\";\n\nconst RoomPage = () => {\n  const stayDispatch = useStayDispatch();\n  const {\n    place,\n    property,\n    stay\n  } = useStayState();\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    place,\n    property,\n    description: undefined,\n    stay\n  });\n\n  const proceed = () => {\n    if (data.stay && data.property) {\n      stayDispatch({\n        type: \"add\",\n        payload: {\n          place: data.place,\n          property: data.property,\n          stay: data.stay\n        }\n      });\n      setTimeout(() => {\n        Router.push(\"/become-a-host/bedrooms\");\n      }, 500);\n    }\n  };\n\n  const revert = () => {\n    console.log(\"revert called\");\n    setTimeout(() => {\n      Router.push(\"/become-a-host\");\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (data.property) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        property: inputTypes[data.place].options[0].props.children\n      }));\n    }\n  }, [data.place]);\n  useEffect(() => {\n    const displayDescription = () => {\n      return properties[data.place].find(type => type.name === data.property).description;\n    };\n\n    if (data.property) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        description: displayDescription()\n      }));\n    }\n  }, [data.property]);\n  return /*#__PURE__*/_jsx(Layout, {\n    variant: \"create\",\n    left: /*#__PURE__*/_jsx(CreatePrototype, {\n      title: \"Property and guests\",\n      variant: \"room\",\n      data: data,\n      setData: setData\n    }),\n    percentage: 5,\n    next: proceed,\n    back: revert,\n    criteria: !data.place || !data.property\n  });\n};\n\nexport default RoomPage;","map":null,"metadata":{},"sourceType":"module"}