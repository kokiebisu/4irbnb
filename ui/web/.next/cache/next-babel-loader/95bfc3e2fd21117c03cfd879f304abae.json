{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/prototype/globe/prototype.language.tsx\";\n\n/** components */\nimport { Button } from \"@button\";\n/** styles */\n\nimport space from \"@styles/space.module.scss\";\nimport font from \"@styles/font.module.scss\";\n\nconst Layout = ({\n  items,\n  type = \"suggested\"\n}) => {\n  const titles = {\n    suggested: \"Suggested languages and regions\",\n    choose: \"Choose a language and region\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: [space[\"m-b--18\"]].join(\" \"),\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: [font[\"size--20\"]].join(\" \"),\n        children: titles[type]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(5, 1fr)\",\n        columnGap: 15,\n        rowGap: 15,\n        padding: 10\n      },\n      children: items.map(({\n        language,\n        region\n      }, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"globe\",\n            language: language,\n            region: region,\n            extendsTo: [font[\"text--left\"]].join(\" \"),\n            block: true,\n            selected: index === 0 && type === \"choose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nexport const LanguagePrototype = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        type: \"choose\",\n        items: [{\n          language: \"English\",\n          region: \"Canada\"\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/prototype/globe/prototype.language.tsx"],"names":["Button","space","font","Layout","items","type","titles","suggested","choose","join","width","display","gridTemplateColumns","columnGap","rowGap","padding","map","language","region","index","LanguagePrototype"],"mappings":";;;AAAA;AACA,SAASA,MAAT,QAAuB,SAAvB;AAEA;;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,MAAMC,MAGJ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAI,GAAG;AAAhB,CAAD,KAAmC;AACtC,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE,iCADE;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAf;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,CAACP,KAAK,CAAC,SAAD,CAAN,EAAmBQ,IAAnB,CAAwB,GAAxB,CAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAE,CAACP,IAAI,CAAC,UAAD,CAAL,EAAmBO,IAAnB,CAAwB,GAAxB,CAAf;AAAA,kBAA8CH,MAAM,CAACD,IAAD;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,mBAAmB,EAAE,gBAHhB;AAILC,QAAAA,SAAS,EAAE,EAJN;AAKLC,QAAAA,MAAM,EAAE,EALH;AAMLC,QAAAA,OAAO,EAAE;AANJ,OADT;AAAA,gBAUGX,KAAK,CAACY,GAAN,CAAU,CAAC;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAD,EAAuBC,KAAvB,KAAiC;AAC1C,4BACE;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,QAAQ,EAAEF,QAFZ;AAGE,YAAA,MAAM,EAAEC,MAHV;AAIE,YAAA,SAAS,EAAE,CAAChB,IAAI,CAAC,YAAD,CAAL,EAAqBO,IAArB,CAA0B,GAA1B,CAJb;AAKE,YAAA,KAAK,MALP;AAME,YAAA,QAAQ,EAAEU,KAAK,KAAK,CAAV,IAAed,IAAI,KAAK;AANpC;AAAA;AAAA;AAAA;AAAA;AADF,WAAUc,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAbA;AAVH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxCD;;AA0CA,OAAO,MAAMC,iBAA+B,GAAG,MAAM;AACnD,sBACE;AAAA,2BAOE;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE,CAAC;AAAEH,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,MAAM,EAAE;AAA/B,SAAD;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBM","sourcesContent":["/** components */\nimport { Button } from \"@button\";\n\n/** styles */\nimport space from \"@styles/space.module.scss\";\nimport font from \"@styles/font.module.scss\";\n\nconst Layout: React.FC<{\n  items?: { language?: string; region?: string }[];\n  type?: string;\n}> = ({ items, type = \"suggested\" }) => {\n  const titles = {\n    suggested: \"Suggested languages and regions\",\n    choose: \"Choose a language and region\",\n  };\n  return (\n    <div>\n      <div className={[space[\"m-b--18\"]].join(\" \")}>\n        <h3 className={[font[\"size--20\"]].join(\" \")}>{titles[type]}</h3>\n      </div>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(5, 1fr)\",\n          columnGap: 15,\n          rowGap: 15,\n          padding: 10,\n        }}\n      >\n        {items.map(({ language, region }, index) => {\n          return (\n            <div key={index}>\n              <Button\n                variant=\"globe\"\n                language={language}\n                region={region}\n                extendsTo={[font[\"text--left\"]].join(\" \")}\n                block\n                selected={index === 0 && type === \"choose\"}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport const LanguagePrototype: React.FC<{}> = () => {\n  return (\n    <div>\n      {/* <div className={[space[\"m-b--24\"]].join(\" \")}>\n        <Layout\n          type=\"suggested\"\n          items={[{ language: \"English\", region: \"Canada\" }]}\n        />\n      </div> */}\n      <div>\n        <Layout\n          type=\"choose\"\n          items={[{ language: \"English\", region: \"Canada\" }]}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}