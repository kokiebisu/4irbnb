{"ast":null,"code":"import { emailRegex } from './regex';\nexport const checkEmail = value => {\n  const re = emailRegex;\n  return re.test(String(value).toLowerCase());\n};\nexport const checkPassword = value => {\n  if (value && value.length && value.length > 8) {\n    return true;\n  }\n\n  return false;\n};\nexport const validateAuth = values => {\n  const errors = {};\n\n  if (!values.phone) {\n    errors.phone = 'Phone number is required';\n  }\n\n  if (!values.region) {\n    errors.region = 'Region is required';\n  }\n\n  return errors;\n};\nexport const validateSignup = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!checkEmail(values.email)) {\n    errors.email = 'Enter a valid email.';\n  }\n\n  if (!values.firstname) {\n    errors.firstname = 'First name is required';\n  }\n\n  if (!values.lastname) {\n    errors.lastname = 'Last name is required';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  }\n\n  if (parseInt(values.year) > 2002) {\n    errors.year = 'You must be older that 18';\n  }\n\n  return errors;\n};\nexport const validateLogin = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!checkEmail(values.email)) {\n    errors.email = 'Enter a valid email.';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  }\n\n  return errors;\n};\nexport const validateExists = values => {\n  const errors = {};\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  }\n\n  return errors;\n};\nexport const validateForgotPassword = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!checkEmail(values.email)) {\n    errors.email = 'Enter a valid email.';\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/helper/auth.ts"],"names":["emailRegex","checkEmail","value","re","test","String","toLowerCase","checkPassword","length","validateAuth","values","errors","phone","region","validateSignup","email","firstname","lastname","password","parseInt","year","validateLogin","validateExists","validateForgotPassword"],"mappings":"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","sourcesContent":["import { emailRegex } from './regex';\n\nexport const checkEmail = (value) => {\n  const re = emailRegex;\n  return re.test(String(value).toLowerCase());\n};\n\nexport const checkPassword = (value) => {\n  if (value && value.length && value.length > 8) {\n    return true;\n  }\n  return false;\n};\n\nexport const validateAuth = (values) => {\n  const errors: any = {};\n  if (!values.phone) {\n    errors.phone = 'Phone number is required';\n  }\n  if (!values.region) {\n    errors.region = 'Region is required';\n  }\n  return errors;\n};\n\nexport const validateSignup = (values) => {\n  const errors: any = {};\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!checkEmail(values.email)) {\n    errors.email = 'Enter a valid email.';\n  }\n  if (!values.firstname) {\n    errors.firstname = 'First name is required';\n  }\n  if (!values.lastname) {\n    errors.lastname = 'Last name is required';\n  }\n  if (!values.password) {\n    errors.password = 'Password is required';\n  }\n  if (parseInt(values.year) > 2002) {\n    errors.year = 'You must be older that 18';\n  }\n\n  return errors;\n};\n\nexport const validateLogin = (values) => {\n  const errors: any = {};\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!checkEmail(values.email)) {\n    errors.email = 'Enter a valid email.';\n  }\n  if (!values.password) {\n    errors.password = 'Password is required';\n  }\n\n  return errors;\n};\n\nexport const validateExists = (values) => {\n  const errors: any = {};\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  }\n\n  return errors;\n};\n\nexport const validateForgotPassword = (values) => {\n  const errors: any = {};\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (!checkEmail(values.email)) {\n    errors.email = 'Enter a valid email.';\n  }\n\n  return errors;\n};\n"]},"metadata":{},"sourceType":"module"}