{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.email.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n/** styles */\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\n/** styles */\n\nimport input from \"@input/input.module.scss\";\nimport { styleInput, styleLabel, styleContainer } from \"./styling.text\";\n/** helpers */\n\nimport { checkEmail } from \"@helper/auth\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport var EmailInput = function EmailInput(_ref) {\n  _s();\n\n  var handleChange = _ref.handleChange,\n      value = _ref.value,\n      direction = _ref.direction,\n      _ref$errors = _ref.errors,\n      errors = _ref$errors === void 0 ? false : _ref$errors;\n\n  var _useState = useState(false),\n      fieldActive = _useState[0],\n      setFieldActive = _useState[1];\n\n  var activateField = function activateField() {\n    setFieldActive(true);\n  };\n\n  var deactivateField = function deactivateField() {\n    setFieldActive(false);\n  };\n\n  var renderShape = function renderShape() {\n    switch (direction) {\n      case \"top\":\n        return [color[\"b-b--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"bbr--10\"]].join(\" \");\n\n      case \"bottom\":\n        return [color[\"b-t--white__3\"], color[\"b-l--white__3\"], color[\"b-r--white__3\"], shape[\"btr--10\"]].join(\" \");\n\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 60\n    },\n    className: \"\".concat([input[\"outside\"], layout[\"relative\"], space[\"p-v--6\"], space[\"p-h--12\"], layout[\"items-center\"]].join(\" \"), \" \").concat(renderShape(), \" \").concat(styleContainer(errors, fieldActive, checkEmail(value))),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        onChange: handleChange,\n        value: value,\n        onFocus: activateField,\n        onBlur: deactivateField,\n        className: \"\".concat([space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], color[\"c__placeholder--black\"], input[\"input\"]].join(\" \"), \" \").concat(styleInput(errors, fieldActive, checkEmail(value))),\n        placeholder: fieldActive ? \"Email\" : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"\".concat([layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \"), \" \").concat(styleLabel(errors, fieldActive, checkEmail(value), value)),\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EmailInput, \"DLYqPpw0wWPsykyPlQDCpKnC2Es=\");\n\n_c = EmailInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailInput\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.email.tsx"],"names":["useState","shape","color","space","layout","font","input","styleInput","styleLabel","styleContainer","checkEmail","EmailInput","handleChange","value","direction","errors","fieldActive","setFieldActive","activateField","deactivateField","renderShape","join","height","position","width","undefined"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n/** styles */\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\n\n/** styles */\nimport input from \"@input/input.module.scss\";\nimport { styleInput, styleLabel, styleContainer } from \"./styling.text\";\n\n/** helpers */\nimport { checkEmail } from \"@helper/auth\";\n\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\nexport const EmailInput: React.FC<{\n  handleChange?: any;\n  value?: string;\n  direction?: string;\n  errors?: boolean;\n}> = ({ handleChange, value, direction, errors = false }) => {\n  const [fieldActive, setFieldActive] = useState(false);\n\n  const activateField = () => {\n    setFieldActive(true);\n  };\n\n  const deactivateField = () => {\n    setFieldActive(false);\n  };\n\n  const renderShape = () => {\n    switch (direction) {\n      case \"top\":\n        return [\n          color[\"b-b--white__3\"],\n          color[\"b-l--white__3\"],\n          color[\"b-r--white__3\"],\n          shape[\"bbr--10\"],\n        ].join(\" \");\n      case \"bottom\":\n        return [\n          color[\"b-t--white__3\"],\n          color[\"b-l--white__3\"],\n          color[\"b-r--white__3\"],\n          shape[\"btr--10\"],\n        ].join(\" \");\n      default:\n        return [color[\"b--white__3\"], shape[\"br--10\"]].join(\" \");\n    }\n  };\n\n  return (\n    <div\n      style={{ height: 60 }}\n      className={`${[\n        input[\"outside\"],\n        layout[\"relative\"],\n        space[\"p-v--6\"],\n        space[\"p-h--12\"],\n        layout[\"items-center\"],\n      ].join(\" \")} ${renderShape()} ${styleContainer(\n        errors,\n        fieldActive,\n        checkEmail(value)\n      )}`}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <input\n          autoFocus={true}\n          id=\"email\"\n          name=\"email\"\n          type=\"text\"\n          onChange={handleChange}\n          value={value}\n          onFocus={activateField}\n          onBlur={deactivateField}\n          className={`${[\n            space[\"p--0\"],\n            shape[\"w--full\"],\n            layout[\"block\"],\n            color[\"b--0\"],\n            font[\"size--16\"],\n            font[\"weight--300\"],\n            color[\"c__placeholder--black\"],\n            input[\"input\"],\n          ].join(\" \")} ${styleInput(errors, fieldActive, checkEmail(value))}`}\n          placeholder={fieldActive ? \"Email\" : undefined}\n        />\n        <label\n          htmlFor=\"email\"\n          className={`${[\n            layout[\"absolute\"],\n            font[\"size--12\"],\n            color[\"c--gray__1\"],\n            font[\"weight--100\"],\n            input[\"label\"],\n          ].join(\" \")} ${styleLabel(\n            errors,\n            fieldActive,\n            checkEmail(value),\n            value\n          )}`}\n        >\n          Email\n        </label>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}