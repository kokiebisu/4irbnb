{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from \"react\";\n/** styles */\n\nimport space from \"@styles/space.module.scss\";\nimport shape from \"@styles/shape.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\n/** context */\n\nimport { useToggleState } from \"@context/toggle\";\n/** components */\n\nimport { Bar } from \"@bar/bar.component\";\nimport { Modal } from \"@modal/modal.component\";\n/** hooks */\n\nimport { useOnClickOutside } from \"@hooks/useOnClickOutside\";\nexport var StayPrototype = function StayPrototype(_ref) {\n  var category = _ref.category,\n      setCategory = _ref.setCategory,\n      _ref$transparent = _ref.transparent,\n      transparent = _ref$transparent === void 0 ? false : _ref$transparent,\n      expanded = _ref.expanded,\n      setExpanded = _ref.setExpanded;\n  var toggleState = useToggleState();\n\n  var _useState = useState(null),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var containerRef = useRef();\n  useOnClickOutside(containerRef, function () {\n    if (selected) {\n      setSelected(!selected);\n    }\n\n    if (expanded) {\n      setExpanded(!expanded);\n    }\n  });\n  var contents = {\n    location: {\n      styles: {\n        left: 0,\n        maxWidth: 400\n      }\n    },\n    checkin: {\n      styles: {\n        left: 0,\n        maxWidth: 720\n      }\n    },\n    checkout: {\n      styles: {\n        left: 0,\n        maxWidth: 720\n      }\n    },\n    guests: {\n      styles: {\n        right: 0,\n        maxWidth: 325,\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: layout[\"relative\"],\n    children: [/*#__PURE__*/_jsx(Bar, {\n      variant: \"search\",\n      selected: selected,\n      setSelected: setSelected,\n      category: category,\n      setCategory: setCategory,\n      extendsTo: [space[\"p-h--12\"]].join(\" \"),\n      transparent: transparent\n    }), Object.keys(contents).map(function (content, index) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: _objectSpread({\n          position: \"absolute\",\n          top: 60,\n          zIndex: 80,\n          width: \"100%\"\n        }, contents[content].styles),\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: [shape[\"w--full\"]].join(\" \"),\n          ref: containerRef,\n          children: /*#__PURE__*/_jsx(Modal, {\n            variant: content,\n            dispatch: \"toggle_\".concat(content),\n            extendsTo: [shape[\"w--full\"]].join(\" \"),\n            criteria: toggleState[content]\n          })\n        })\n      }, index);\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}