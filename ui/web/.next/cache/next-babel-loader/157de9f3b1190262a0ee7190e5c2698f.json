{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/context/toggle.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer, useContext } from \"react\";\nvar ToggleStateContext = /*#__PURE__*/createContext(undefined);\nvar ToggleDispatchContext = /*#__PURE__*/createContext(undefined);\n\nvar toggleReducer = function toggleReducer(state, action) {\n  switch (action.type) {\n    case \"toggle_privacy\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        privacy: !state.privacy\n      });\n\n    case \"toggle_menu\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        menu: !state.menu\n      });\n\n    case \"toggle_auth\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        auth: !state.auth,\n        menu: !state.menu\n      });\n\n    case \"toggle_globe\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        globe: !state.globe\n      });\n\n    case \"toggle_location\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        location: !state.location,\n        guests: false,\n        check: false\n      });\n\n    case \"toggle_guests\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        guests: !state.guests,\n        location: false,\n        check: false\n      });\n\n    case \"toggle_checkin\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkin: !state.checkin,\n        checkout: false,\n        location: false,\n        guests: false\n      });\n\n    case \"toggle_checkout\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkout: !state.checkout,\n        checkin: false,\n        location: false,\n        guests: false\n      });\n\n    case \"close_register\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        auth: !state.auth\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar ToggleProvider = function ToggleProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(toggleReducer, {\n    privacy: true,\n    menu: false,\n    auth: false,\n    globe: false,\n    location: false,\n    guests: false,\n    checkin: false,\n    checkout: false\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsxDEV(ToggleStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(ToggleDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ToggleProvider, \"O10vN8qbtsZsPJbmGDBrcHzfTV0=\");\n\n_c = ToggleProvider;\n\nvar useToggleState = function useToggleState() {\n  _s2();\n\n  var context = useContext(ToggleStateContext);\n\n  if (!context) {\n    throw new Error(\"useToggleState must be used within a ToggleProvider\");\n  }\n\n  return context;\n};\n\n_s2(useToggleState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar useToggleDispatch = function useToggleDispatch() {\n  _s3();\n\n  var context = useContext(ToggleDispatchContext);\n\n  if (!context) {\n    throw new Error(\"useToggleDispatch must be used within a ToggleProvider\");\n  }\n\n  return context;\n};\n\n_s3(useToggleDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useToggleDispatch, useToggleState, ToggleProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleProvider\");","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/context/toggle.tsx"],"names":["createContext","useReducer","useContext","ToggleStateContext","undefined","ToggleDispatchContext","toggleReducer","state","action","type","privacy","menu","auth","globe","location","guests","check","checkin","checkout","ToggleProvider","children","dispatch","useToggleState","context","Error","useToggleDispatch"],"mappings":"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","sourcesContent":["import { createContext, useReducer, useContext } from \"react\";\n\ntype Dispatch = (action: Action) => void;\ntype Action = { type: string };\n\ntype State = {\n  privacy: boolean;\n  menu: boolean;\n  auth: boolean;\n  globe: boolean;\n  location: boolean;\n  guests: boolean;\n  checkin: boolean;\n  checkout: boolean;\n};\n\ntype ToggleProviderProps = { children: React.ReactNode };\n\nconst ToggleStateContext = createContext<State | undefined>(undefined);\nconst ToggleDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nconst toggleReducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"toggle_privacy\":\n      return {\n        ...state,\n        privacy: !state.privacy,\n      };\n    case \"toggle_menu\":\n      return { ...state, menu: !state.menu };\n    case \"toggle_auth\":\n      return { ...state, auth: !state.auth, menu: !state.menu };\n    case \"toggle_globe\":\n      return { ...state, globe: !state.globe };\n    case \"toggle_location\":\n      return {\n        ...state,\n        location: !state.location,\n        guests: false,\n        check: false,\n      };\n    case \"toggle_guests\":\n      return { ...state, guests: !state.guests, location: false, check: false };\n    case \"toggle_checkin\":\n      return {\n        ...state,\n        checkin: !state.checkin,\n        checkout: false,\n        location: false,\n        guests: false,\n      };\n    case \"toggle_checkout\":\n      return {\n        ...state,\n        checkout: !state.checkout,\n        checkin: false,\n        location: false,\n        guests: false,\n      };\n    case \"close_register\":\n      return { ...state, auth: !state.auth };\n    default:\n      return state;\n  }\n};\n\nconst ToggleProvider = ({ children }: ToggleProviderProps) => {\n  const [state, dispatch] = useReducer(toggleReducer, {\n    privacy: true,\n    menu: false,\n    auth: false,\n    globe: false,\n    location: false,\n    guests: false,\n    checkin: false,\n    checkout: false,\n  });\n\n  return (\n    <ToggleStateContext.Provider value={state}>\n      <ToggleDispatchContext.Provider value={dispatch}>\n        {children}\n      </ToggleDispatchContext.Provider>\n    </ToggleStateContext.Provider>\n  );\n};\n\nconst useToggleState = () => {\n  const context = useContext(ToggleStateContext);\n  if (!context) {\n    throw new Error(\"useToggleState must be used within a ToggleProvider\");\n  }\n  return context;\n};\n\nconst useToggleDispatch = () => {\n  const context = useContext(ToggleDispatchContext);\n  if (!context) {\n    throw new Error(\"useToggleDispatch must be used within a ToggleProvider\");\n  }\n  return context;\n};\n\nexport { useToggleDispatch, useToggleState, ToggleProvider };\n"]},"metadata":{},"sourceType":"module"}