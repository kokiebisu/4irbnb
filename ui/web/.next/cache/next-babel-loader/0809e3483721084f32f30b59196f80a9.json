{"ast":null,"code":"import { useState, useEffect } from 'react';\n/**\n * A custom hook which calculates the scroll position\n */\n\nexport const useHandleScroll = () => {\n  const {\n    0: scrollPosition,\n    1: setScrollPosition\n  } = useState(0);\n\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    handleScroll();\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return scrollPosition;\n};","map":null,"metadata":{},"sourceType":"module"}