{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nexport const useSlider = (items, width, type) => {\n  const displayingLength = {\n    banner: items.length,\n    also: items.length / 2\n  };\n  const displayingWidth = {\n    banner: width,\n    also: width / (width > 728 ? 3 : 2)\n  };\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    activeSlide: 0,\n    translate: 0,\n    transition: 0.45\n  });\n\n  const previousSlide = () => {\n    if (state.activeSlide === 0) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        translate: (displayingLength[type] - 1) * displayingWidth[type],\n        activeSlide: displayingLength[type] - 1\n      }));\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      activeSlide: state.activeSlide - 1,\n      translate: (state.activeSlide - 1) * displayingWidth[type]\n    }));\n  };\n\n  const nextSlide = () => {\n    if (state.activeSlide === displayingLength[type] - 1) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        translate: 0,\n        activeSlide: 0\n      }));\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      activeSlide: state.activeSlide + 1,\n      translate: (state.activeSlide + 1) * displayingWidth[type]\n    }));\n  };\n\n  return {\n    state,\n    previousSlide,\n    nextSlide\n  };\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/hooks/useSlider.ts"],"names":["useState","useSlider","items","width","type","displayingLength","banner","length","also","displayingWidth","state","setState","activeSlide","translate","transition","previousSlide","nextSlide"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAYA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwB;AAC/C,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,MADS;AAEvBC,IAAAA,IAAI,EAAEN,KAAK,CAACK,MAAN,GAAe;AAFE,GAAzB;AAKA,QAAME,eAAe,GAAG;AACtBH,IAAAA,MAAM,EAAEH,KADc;AAEtBK,IAAAA,IAAI,EAAEL,KAAK,IAAIA,KAAK,GAAG,GAAR,GAAc,CAAd,GAAkB,CAAtB;AAFW,GAAxB;AAIA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC;AACjCY,IAAAA,WAAW,EAAE,CADoB;AAEjCC,IAAAA,SAAS,EAAE,CAFsB;AAGjCC,IAAAA,UAAU,EAAE;AAHqB,GAAD,CAAlC;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIL,KAAK,CAACE,WAAN,KAAsB,CAA1B,EAA6B;AAC3B,aAAOD,QAAQ,iCACVD,KADU;AAEbG,QAAAA,SAAS,EAAE,CAACR,gBAAgB,CAACD,IAAD,CAAhB,GAAyB,CAA1B,IAA+BK,eAAe,CAACL,IAAD,CAF5C;AAGbQ,QAAAA,WAAW,EAAEP,gBAAgB,CAACD,IAAD,CAAhB,GAAyB;AAHzB,SAAf;AAKD;;AAEDO,IAAAA,QAAQ,iCACHD,KADG;AAENE,MAAAA,WAAW,EAAEF,KAAK,CAACE,WAAN,GAAoB,CAF3B;AAGNC,MAAAA,SAAS,EAAE,CAACH,KAAK,CAACE,WAAN,GAAoB,CAArB,IAA0BH,eAAe,CAACL,IAAD;AAH9C,OAAR;AAKD,GAdD;;AAgBA,QAAMY,SAAS,GAAG,MAAM;AACtB,QAAIN,KAAK,CAACE,WAAN,KAAsBP,gBAAgB,CAACD,IAAD,CAAhB,GAAyB,CAAnD,EAAsD;AACpD,aAAOO,QAAQ,iCACVD,KADU;AAEbG,QAAAA,SAAS,EAAE,CAFE;AAGbD,QAAAA,WAAW,EAAE;AAHA,SAAf;AAKD;;AACDD,IAAAA,QAAQ,iCACHD,KADG;AAENE,MAAAA,WAAW,EAAEF,KAAK,CAACE,WAAN,GAAoB,CAF3B;AAGNC,MAAAA,SAAS,EAAE,CAACH,KAAK,CAACE,WAAN,GAAoB,CAArB,IAA0BH,eAAe,CAACL,IAAD;AAH9C,OAAR;AAKD,GAbD;;AAeA,SAAO;AAAEM,IAAAA,KAAF;AAASK,IAAAA,aAAT;AAAwBC,IAAAA;AAAxB,GAAP;AACD,CAhDM","sourcesContent":["import { useState } from 'react';\n\nexport interface SliderProps {\n  state: {\n    activeSlide: number;\n    translate: number;\n    transition: number;\n  };\n  nextSlide: () => void;\n  previousSlide: () => void;\n}\n\nexport const useSlider = (items, width, type) => {\n  const displayingLength = {\n    banner: items.length,\n    also: items.length / 2,\n  };\n\n  const displayingWidth = {\n    banner: width,\n    also: width / (width > 728 ? 3 : 2),\n  };\n  const [state, setState] = useState({\n    activeSlide: 0,\n    translate: 0,\n    transition: 0.45,\n  });\n\n  const previousSlide = () => {\n    if (state.activeSlide === 0) {\n      return setState({\n        ...state,\n        translate: (displayingLength[type] - 1) * displayingWidth[type],\n        activeSlide: displayingLength[type] - 1,\n      });\n    }\n\n    setState({\n      ...state,\n      activeSlide: state.activeSlide - 1,\n      translate: (state.activeSlide - 1) * displayingWidth[type],\n    });\n  };\n\n  const nextSlide = () => {\n    if (state.activeSlide === displayingLength[type] - 1) {\n      return setState({\n        ...state,\n        translate: 0,\n        activeSlide: 0,\n      });\n    }\n    setState({\n      ...state,\n      activeSlide: state.activeSlide + 1,\n      translate: (state.activeSlide + 1) * displayingWidth[type],\n    });\n  };\n\n  return { state, previousSlide, nextSlide };\n};\n"]},"metadata":{},"sourceType":"module"}