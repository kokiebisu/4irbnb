{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.region.tsx\";\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n/** Styling */\n\nimport { styleInput, styleLabel, styleContainer } from \"./styling.select\";\nimport { renderShape } from \"./logic/logic.region\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport const RegionInput = ({\n  handleChange,\n  value,\n  direction,\n  errors = false\n}) => {\n  const {\n    0: fieldActive,\n    1: setFieldActive\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 60\n    },\n    className: `${[layout[\"flex\"], input[\"outside\"], layout[\"relative\"], layout[\"items-center\"]].join(\" \")} `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${renderShape(direction)} ${styleContainer(errors, fieldActive, value)}`,\n      style: {\n        padding: \"0 12px\",\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          height: \"100%\"\n        },\n        id: \"region\",\n        onChange: handleChange,\n        value: value,\n        onFocus: () => setFieldActive(true),\n        onBlur: () => setFieldActive(false),\n        className: `${[shape[\"br--10\"], space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], input[\"input\"]].join(\" \")} ${styleInput(errors, fieldActive)}`,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"canada\",\n          children: \"Canada (+1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"japan\",\n          children: \"Afghanistan (+1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"japan\",\n          children: \"United States (+1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"japan\",\n          children: \"Korea (+1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"japan\",\n          children: \"Mexico (+1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"region\",\n        className: `${[layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \")} ${styleLabel(errors, fieldActive)}`,\n        children: \"Country/Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.region.tsx"],"names":["useState","shape","color","space","layout","font","input","styleInput","styleLabel","styleContainer","renderShape","RegionInput","handleChange","value","direction","errors","fieldActive","setFieldActive","height","join","padding","position","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n/** styles **/\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n\n/** Styling */\nimport { styleInput, styleLabel, styleContainer } from \"./styling.select\";\nimport { renderShape } from \"./logic/logic.region\";\n\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\nexport const RegionInput: React.FC<{\n  handleChange?: any;\n  value?: string;\n  direction?: string;\n  errors?: boolean;\n}> = ({ handleChange, value, direction, errors = false }) => {\n  const [fieldActive, setFieldActive] = useState(false);\n\n  return (\n    <div\n      style={{ height: 60 }}\n      className={`${[\n        layout[\"flex\"],\n        input[\"outside\"],\n        layout[\"relative\"],\n        layout[\"items-center\"],\n      ].join(\" \")} `}\n    >\n      <div\n        className={`${renderShape(direction)} ${styleContainer(\n          errors,\n          fieldActive,\n          value\n        )}`}\n        style={{\n          padding: \"0 12px\",\n          position: \"relative\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <select\n          style={{ height: \"100%\" }}\n          id=\"region\"\n          onChange={handleChange}\n          value={value}\n          onFocus={() => setFieldActive(true)}\n          onBlur={() => setFieldActive(false)}\n          className={`${[\n            shape[\"br--10\"],\n            space[\"p--0\"],\n            shape[\"w--full\"],\n            layout[\"block\"],\n            color[\"b--0\"],\n            font[\"size--16\"],\n            font[\"weight--300\"],\n            input[\"input\"],\n          ].join(\" \")} ${styleInput(errors, fieldActive)}`}\n        >\n          <option value=\"canada\">Canada (+1)</option>\n          <option value=\"japan\">Afghanistan (+1)</option>\n          <option value=\"japan\">United States (+1)</option>\n          <option value=\"japan\">Korea (+1)</option>\n          <option value=\"japan\">Mexico (+1)</option>\n        </select>\n        <label\n          htmlFor=\"region\"\n          className={`${[\n            layout[\"absolute\"],\n            font[\"size--12\"],\n            color[\"c--gray__1\"],\n            font[\"weight--100\"],\n            input[\"label\"],\n          ].join(\" \")} ${styleLabel(errors, fieldActive)}`}\n        >\n          Country/Region\n        </label>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}