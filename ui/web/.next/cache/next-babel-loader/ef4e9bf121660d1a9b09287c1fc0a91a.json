{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n/** Styling */\n\nimport { styleInput, styleLabel, styleContainer } from \"./styling.select\";\nimport { renderShape } from \"./logic/logic.region\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param {function} handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport var RegionInput = function RegionInput(_ref) {\n  var handleChange = _ref.handleChange,\n      value = _ref.value,\n      direction = _ref.direction,\n      _ref$errors = _ref.errors,\n      errors = _ref$errors === void 0 ? false : _ref$errors;\n\n  var _useState = useState(false),\n      fieldActive = _useState[0],\n      setFieldActive = _useState[1];\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      height: 60\n    },\n    className: \"\".concat([layout[\"flex\"], input[\"outside\"], layout[\"relative\"], layout[\"items-center\"]].join(\" \"), \" \"),\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"\".concat(renderShape(direction), \" \").concat(styleContainer(errors, fieldActive, value)),\n      style: {\n        padding: \"0 12px\",\n        position: \"relative\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxs(\"select\", {\n        style: {\n          height: \"100%\"\n        },\n        id: \"region\",\n        onChange: handleChange,\n        value: value,\n        onFocus: function onFocus() {\n          return setFieldActive(true);\n        },\n        onBlur: function onBlur() {\n          return setFieldActive(false);\n        },\n        className: \"\".concat([shape[\"br--10\"], space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], input[\"input\"]].join(\" \"), \" \").concat(styleInput(errors, fieldActive)),\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"canada\",\n          children: \"Canada (+1)\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"japan\",\n          children: \"Afghanistan (+1)\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"japan\",\n          children: \"United States (+1)\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"japan\",\n          children: \"Korea (+1)\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"japan\",\n          children: \"Mexico (+1)\"\n        })]\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"region\",\n        className: \"\".concat([layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \"), \" \").concat(styleLabel(errors, fieldActive)),\n        children: \"Country/Region\"\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}