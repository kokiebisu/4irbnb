{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.birthdate.tsx\";\nimport { useState } from \"react\";\n/** styles **/\n\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n/** Styling */\n\nimport { styleInput, styleLabel, styleContainer } from \"./styling.select\";\nimport { birthdate, renderShape } from \"./logic/logic.birthdate\";\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\n\nexport const BirthdateInput = ({\n  handleChange,\n  value,\n  direction,\n  errors = false,\n  dateType = \"year\"\n}) => {\n  const {\n    0: fieldActive,\n    1: setFieldActive\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${[shape[\"h--60\"], layout[\"flex\"], input[\"outside\"], layout[\"relative\"], layout[\"items-center\"]].join(\" \")} `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${renderShape(direction)} ${styleContainer(errors, fieldActive, direction)} ${[shape[\"h--full\"], shape[\"w--full\"], layout[\"relative\"], space[\"p-h--15\"]].join(\" \")}`,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: dateType,\n        name: dateType,\n        onChange: handleChange,\n        value: value,\n        defaultValue: \"\",\n        onFocus: () => setFieldActive(true),\n        onBlur: () => setFieldActive(false),\n        className: `${[shape[\"h--full\"], shape[\"br--10\"], space[\"p--0\"], shape[\"w--full\"], layout[\"block\"], color[\"b--0\"], font[\"size--16\"], font[\"weight--300\"], input[\"input\"]].join(\" \")} ${styleInput(errors, fieldActive)}`,\n        children: [dateType === \"year\" && new Array(99).fill(null).map((_, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index + 1920,\n            children: index + 1920\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this);\n        }), dateType === \"month\" && new Array(12).fill(null).map((_, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index + 1,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this);\n        }), dateType === \"day\" && new Array(31).fill(null).map((_, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index + 1,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: dateType,\n        className: `${[layout[\"absolute\"], font[\"size--12\"], color[\"c--gray__1\"], font[\"weight--100\"], input[\"label\"]].join(\" \")} ${styleLabel(errors, fieldActive)}`,\n        children: birthdate[dateType]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/ken/Desktop/airbnb/ui/web/components/atoms/input/input.birthdate.tsx"],"names":["useState","shape","color","space","layout","font","input","styleInput","styleLabel","styleContainer","birthdate","renderShape","BirthdateInput","handleChange","value","direction","errors","dateType","fieldActive","setFieldActive","join","Array","fill","map","_","index"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA;;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA;;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,cAAjC,QAAuD,kBAAvD;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,yBAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAMX,GAAG,CAAC;AACJC,EAAAA,YADI;AAEJC,EAAAA,KAFI;AAGJC,EAAAA,SAHI;AAIJC,EAAAA,MAAM,GAAG,KAJL;AAKJC,EAAAA,QAAQ,GAAG;AALP,CAAD,KAMC;AACJ,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,GAAE,CACZC,KAAK,CAAC,OAAD,CADO,EAEZG,MAAM,CAAC,MAAD,CAFM,EAGZE,KAAK,CAAC,SAAD,CAHO,EAIZF,MAAM,CAAC,UAAD,CAJM,EAKZA,MAAM,CAAC,cAAD,CALM,EAMZgB,IANY,CAMP,GANO,CAMF,GAPd;AAAA,2BASE;AACE,MAAA,SAAS,EAAG,GAAET,WAAW,CAACI,SAAD,CAAY,IAAGN,cAAc,CACpDO,MADoD,EAEpDE,WAFoD,EAGpDH,SAHoD,CAIpD,IAAG,CACHd,KAAK,CAAC,SAAD,CADF,EAEHA,KAAK,CAAC,SAAD,CAFF,EAGHG,MAAM,CAAC,UAAD,CAHH,EAIHD,KAAK,CAAC,SAAD,CAJF,EAKHiB,IALG,CAKE,GALF,CAKO,EAVd;AAAA,8BAYE;AACE,QAAA,EAAE,EAAEH,QADN;AAEE,QAAA,IAAI,EAAEA,QAFR;AAGE,QAAA,QAAQ,EAAEJ,YAHZ;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,YAAY,EAAC,EALf;AAME,QAAA,OAAO,EAAE,MAAMK,cAAc,CAAC,IAAD,CAN/B;AAOE,QAAA,MAAM,EAAE,MAAMA,cAAc,CAAC,KAAD,CAP9B;AAQE,QAAA,SAAS,EAAG,GAAE,CACZlB,KAAK,CAAC,SAAD,CADO,EAEZA,KAAK,CAAC,QAAD,CAFO,EAGZE,KAAK,CAAC,MAAD,CAHO,EAIZF,KAAK,CAAC,SAAD,CAJO,EAKZG,MAAM,CAAC,OAAD,CALM,EAMZF,KAAK,CAAC,MAAD,CANO,EAOZG,IAAI,CAAC,UAAD,CAPQ,EAQZA,IAAI,CAAC,aAAD,CARQ,EASZC,KAAK,CAAC,OAAD,CATO,EAUZc,IAVY,CAUP,GAVO,CAUF,IAAGb,UAAU,CAACS,MAAD,EAASE,WAAT,CAAsB,EAlBjD;AAAA,mBAoBGD,QAAQ,KAAK,MAAb,IACC,IAAII,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzC,8BACE;AAAoB,YAAA,KAAK,EAAEA,KAAK,GAAG,IAAnC;AAAA,sBACGA,KAAK,GAAG;AADX,aAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND,CArBJ,EA4BGR,QAAQ,KAAK,OAAb,IACC,IAAII,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzC,8BACE;AAAoB,YAAA,KAAK,EAAEA,KAAK,GAAG,CAAnC;AAAA,sBACGA,KAAK,GAAG;AADX,aAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND,CA7BJ,EAoCGR,QAAQ,KAAK,KAAb,IACC,IAAII,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzC,8BACE;AAAoB,YAAA,KAAK,EAAEA,KAAK,GAAG,CAAnC;AAAA,sBACGA,KAAK,GAAG;AADX,aAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND,CArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAyDE;AACE,QAAA,OAAO,EAAER,QADX;AAEE,QAAA,SAAS,EAAG,GAAE,CACZb,MAAM,CAAC,UAAD,CADM,EAEZC,IAAI,CAAC,UAAD,CAFQ,EAGZH,KAAK,CAAC,YAAD,CAHO,EAIZG,IAAI,CAAC,aAAD,CAJQ,EAKZC,KAAK,CAAC,OAAD,CALO,EAMZc,IANY,CAMP,GANO,CAMF,IAAGZ,UAAU,CAACQ,MAAD,EAASE,WAAT,CAAsB,EARjD;AAAA,kBAUGR,SAAS,CAACO,QAAD;AAVZ;AAAA;AAAA;AAAA;AAAA,cAzDF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD,CAjGM","sourcesContent":["import { useState } from \"react\";\n\n/** styles **/\nimport shape from \"@styles/shape.module.scss\";\nimport color from \"@styles/color.module.scss\";\nimport space from \"@styles/space.module.scss\";\nimport layout from \"@styles/layout.module.scss\";\nimport font from \"@styles/font.module.scss\";\nimport input from \"@input/input.module.scss\";\n\n/** Styling */\nimport { styleInput, styleLabel, styleContainer } from \"./styling.select\";\nimport { birthdate, renderShape } from \"./logic/logic.birthdate\";\n\n/**\n * Renders the text input component\n * @param {string} name - Type of input\n * @param {string} placeholder - Placeholder\n * @param handleChange\n * @param {string} value - Current value of the input\n * @param {string} direction - direction in which the input if attached to another\n * @param {string} inputType - Whether if the input is text-based or select-based\n */\nexport const BirthdateInput: React.FC<{\n  handleChange?: any;\n  value?: string;\n  direction?: string;\n  errors?: boolean;\n  dateType?: \"year\" | \"month\" | \"day\";\n}> = ({\n  handleChange,\n  value,\n  direction,\n  errors = false,\n  dateType = \"year\",\n}) => {\n  const [fieldActive, setFieldActive] = useState(false);\n\n  return (\n    <div\n      className={`${[\n        shape[\"h--60\"],\n        layout[\"flex\"],\n        input[\"outside\"],\n        layout[\"relative\"],\n        layout[\"items-center\"],\n      ].join(\" \")} `}\n    >\n      <div\n        className={`${renderShape(direction)} ${styleContainer(\n          errors,\n          fieldActive,\n          direction\n        )} ${[\n          shape[\"h--full\"],\n          shape[\"w--full\"],\n          layout[\"relative\"],\n          space[\"p-h--15\"],\n        ].join(\" \")}`}\n      >\n        <select\n          id={dateType}\n          name={dateType}\n          onChange={handleChange}\n          value={value}\n          defaultValue=\"\"\n          onFocus={() => setFieldActive(true)}\n          onBlur={() => setFieldActive(false)}\n          className={`${[\n            shape[\"h--full\"],\n            shape[\"br--10\"],\n            space[\"p--0\"],\n            shape[\"w--full\"],\n            layout[\"block\"],\n            color[\"b--0\"],\n            font[\"size--16\"],\n            font[\"weight--300\"],\n            input[\"input\"],\n          ].join(\" \")} ${styleInput(errors, fieldActive)}`}\n        >\n          {dateType === \"year\" &&\n            new Array(99).fill(null).map((_, index) => {\n              return (\n                <option key={index} value={index + 1920}>\n                  {index + 1920}\n                </option>\n              );\n            })}\n          {dateType === \"month\" &&\n            new Array(12).fill(null).map((_, index) => {\n              return (\n                <option key={index} value={index + 1}>\n                  {index + 1}\n                </option>\n              );\n            })}\n          {dateType === \"day\" &&\n            new Array(31).fill(null).map((_, index) => {\n              return (\n                <option key={index} value={index + 1}>\n                  {index + 1}\n                </option>\n              );\n            })}\n        </select>\n        <label\n          htmlFor={dateType}\n          className={`${[\n            layout[\"absolute\"],\n            font[\"size--12\"],\n            color[\"c--gray__1\"],\n            font[\"weight--100\"],\n            input[\"label\"],\n          ].join(\" \")} ${styleLabel(errors, fieldActive)}`}\n        >\n          {birthdate[dateType]}\n        </label>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}