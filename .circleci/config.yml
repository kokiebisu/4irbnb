aliases:
  - &docker-image
    docker:
      - image: circleci/node:10

  - &install_typescript_globally
    run:
      name: Install Typescript Globally
      command: yarn global add typescript

  - &deploy
    run:
      name: Deploy
      command: yarn deploy

  - &deploy_production_filters
    filters:
      branches:
        only: master

  - &restore-build-flag
    restore_cache:
      keys:
        - build-flag-{{ checksum "package.json" }}

  - &generate-lock-file
    run:
      name: Generate lock file
      command: yarn generate-lock-entry >> yarn.lock

  - &test-build-flag
    run:
      name: Exit if build flag exists
      command: |
        FILE=build.flag
        if test -f "$FILE"; then
            echo "$FILE exist"
            circleci step halt
        fi

  - &restore-cache
    restore_cache:
      keys:
        - dependencies-cache-{{ checksum "yarn.lock" }}

  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: dependencies-cache-{{ checksum "yarn.lock" }}

  - &build
    run:
      name: Build package
      command: yarn

  - &test
    run:
      name: Test
      command: yarn test:ci

commands:
  save-build-flag:
    steps:
      - run:
          name: Create build flag
          command: touch build.flag
      - save_cache:
          paths:
            - build.flag
          key: build-flag-{{ checksum "package.json" }}

  prepare:
    steps:
      - *build

  test:
    steps:
      - *test

jobs:
  test-auth:
    docker:
      - image: circleci/node:10

    working_directory: ~/airbnb/services/auth

    steps:
      - prepare
      - test

workflows:
  version: 2
  auth-service:
    jobs:
      - test-auth
